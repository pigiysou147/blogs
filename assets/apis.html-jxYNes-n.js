import{_ as e,c as t,o as l,b as i}from"./app-CJxubWz7.js";const a="/blogs/assets/mlw-node-tree-showing-ele-077066a38fab9-DJ_vAtQQ.png",o="/blogs/assets/the-domaria-e1b8e9eeb7aed-B5phyYBJ.png",r="/blogs/assets/an-example-aom-ec190ded5718e-BseQALHA.png",s={},n=i('<h1 id="html-api" tabindex="-1"><a class="header-anchor" href="#html-api"><span>HTML API</span></a></h1><p>本系列文章的简介说“HTML 元素是构成<a href="https://developer.mozilla.org/docs/Web/API/Document_Object_Model" target="_blank" rel="noopener noreferrer">文档对象模型</a>的节点”。 我们已经讨论了元素节点的类型。在本部分中，我们将讨论用于查询这些节点的元素 API。</p><h2 id="dom-和-aom" tabindex="-1"><a class="header-anchor" href="#dom-和-aom"><span>DOM 和 AOM</span></a></h2><p>DOM 是用于访问和处理文档的 API。DOM 是文档中所有节点的树。一些节点可以包含子节点，其他节点则不可以。树状结构包含各种元素及其属性，以及文本节点。</p><figure><img src="'+a+'" alt="显示元素和文本节点的 MLW 节点树。" tabindex="0" loading="lazy"><figcaption>显示元素和文本节点的 MLW 节点树。</figcaption></figure><p>浏览器工具不提供上述树状可视化效果，但您可以在元素检查器中看到节点。</p><figure><img src="'+o+'" alt="DOM/ARIA。" tabindex="0" loading="lazy"><figcaption>DOM/ARIA。</figcaption></figure><p>您可以在浏览器开发者工具中检查的树状表示法就是<a href="/blogs/web/accessibility/aria-html#the_accessibility_tree">无障碍树</a>。AOM 基于 DOM；同样，无障碍功能树包含代表所有标记元素、属性和文本节点的对象：</p><figure><img src="'+r+`" alt="AOM 示例。" tabindex="0" loading="lazy"><figcaption>AOM 示例。</figcaption></figure><h2 id="html-element-api" tabindex="-1"><a class="header-anchor" href="#html-element-api"><span>HTML Element API</span></a></h2><p>DOM 的中间字母是“object”。就像从大多数简介到面向对象的编程类的 <code>person</code> 或 <code>car</code> 对象示例一样，文档树中的每个节点都是可以通过 JavaScript 操作的对象。</p><p>该浏览器提供了多种 API，可提供原生支持的方法、事件以及属性查询和更新。元素节点包含有关元素上设置的所有属性的信息。您可以使用 HTML 接口访问有关元素属性的信息。例如，我们可以使用 <a href="https://developer.mozilla.org/docs/Web/API/HTMLImageElement/alt" target="_blank" rel="noopener noreferrer"><code>HTMLImageElement.alt</code></a> 获取所有图片的 <code>alt</code> 属性：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> allImages</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelectorAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;img&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">allImages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">imageInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">imageInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HTML 接口不仅可以访问元素属性，还可以访问更多信息。我们可以找到只读 <a href="https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetHeight" target="_blank" rel="noopener noreferrer"><code>HTMLElement.offsetHeight</code></a>，以获取页面中每个版块相对于布局的高度。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> allSections</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelectorAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;section&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">allSections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">sectionInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">sectionInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">offsetHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果用户更改其设备屏幕方向或以其他方式更改视口宽度，则每个 <code>&lt;section&gt;</code> 的高度会发生变化，并且 DOM 属性也会随之自动更新。</p><p>HTML 接口 API 并非仅限于访问属性值。DOM 可帮助您深入了解界面的当前状态。HTML API 可以访问所有这些信息。您可分别通过 <a href="https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/duration" target="_blank" rel="noopener noreferrer"><code>HTMLMediaElement.duration</code></a>、<a href="https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/currentTime" target="_blank" rel="noopener noreferrer"><code>HTMLMediaElement.currentTime</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended" target="_blank" rel="noopener noreferrer"><code>HTMLMediaElement.ended</code></a> 查看视频的时长、视图当前播放的内容，以及视频（或音频）是否已结束播放。</p><h2 id="可用的元素接口" tabindex="-1"><a class="header-anchor" href="#可用的元素接口"><span>可用的元素接口</span></a></h2><p>除了一些<a href="/blogs/web/html/headings-and-sections">版块元素</a>，我们在本系列中到目前为止所涵盖但尚未介绍的大部分 HTML 元素都有关联的 DOM 接口。所有元素的基本接口已恰如其分地命名为<a href="https://developer.mozilla.org/docs/Web/API/Element" target="_blank" rel="noopener noreferrer">元素</a>。<a href="https://developer.mozilla.org/docs/Web/API/HTMLElement" target="_blank" rel="noopener noreferrer"><code>HTMLElement</code></a> 继承自 Element，所有特定于 HTML 元素的接口均继承自 Element。某些元素特定接口是由多个相似的元素实现的。</p><p>这些接口包括：</p><ul><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement" target="_blank" rel="noopener noreferrer"><code>HTMLAnchorElement</code></a> - <code>&lt;a&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLAreaElement" target="_blank" rel="noopener noreferrer"><code>HTMLAreaElement</code></a> - <code>&lt;area&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLAudioElement" target="_blank" rel="noopener noreferrer"><code>HTMLAudioElement</code></a> - <code>&lt;audio&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLBaseElement" target="_blank" rel="noopener noreferrer"><code>HTMLBaseElement</code></a> - <code>&lt;base&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLButtonElement" target="_blank" rel="noopener noreferrer"><code>HTMLButtonElement</code></a> - <code>&lt;button&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement" target="_blank" rel="noopener noreferrer"><code>HTMLCanvasElement</code></a> - <code>&lt;canvas&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLDataElement" target="_blank" rel="noopener noreferrer"><code>HTMLDataElement</code></a> - <code>&lt;data&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLDataListElement" target="_blank" rel="noopener noreferrer"><code>HTMLDataListElement</code></a> - <code>&lt;datalist&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement" target="_blank" rel="noopener noreferrer"><code>HTMLDetailsElement</code></a> - <code>&lt;details&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLDialogElement" target="_blank" rel="noopener noreferrer"><code>HTMLDialogElement</code></a> - <code>&lt;dialog&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement" target="_blank" rel="noopener noreferrer"><code>HTMLEmbedElement</code></a> - <code>&lt;embed&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement" target="_blank" rel="noopener noreferrer"><code>HTMLFieldSetElement</code></a> - <code>&lt;fieldset&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLFormElement" target="_blank" rel="noopener noreferrer"><code>HTMLFormElement</code></a> - <code>&lt;form&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLHtmlElement" target="_blank" rel="noopener noreferrer"><code>HTMLHtmlElement</code></a> - <code>&lt;html&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement" target="_blank" rel="noopener noreferrer"><code>HTMLIFrameElement</code></a> - <code>&lt;iframe&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLImageElement" target="_blank" rel="noopener noreferrer"><code>HTMLImageElement</code></a> - <code>&lt;img&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLInputElement" target="_blank" rel="noopener noreferrer"><code>HTMLInputElement</code></a> - <code>&lt;input&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLLabelElement" target="_blank" rel="noopener noreferrer"><code>HTMLLabelElement</code></a> - <code>&lt;label&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLLegendElement" target="_blank" rel="noopener noreferrer"><code>HTMLLegendElement</code></a> - <code>&lt;legend&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLLIElement" target="_blank" rel="noopener noreferrer"><code>HTMLLIElement</code></a> - <code>&lt;li&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLLinkElement" target="_blank" rel="noopener noreferrer"><code>HTMLLinkElement</code></a> - <code>&lt;link&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLMapElement" target="_blank" rel="noopener noreferrer"><code>HTMLMapElement</code></a> - <code>&lt;map&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLMediaElement" target="_blank" rel="noopener noreferrer"><code>HTMLMediaElement</code></a> - <code>&lt;video&gt;</code> <code>&lt;audio&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLMenuElement" target="_blank" rel="noopener noreferrer"><code>HTMLMenuElement</code></a> - <code>&lt;menu&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLMetaElement" target="_blank" rel="noopener noreferrer"><code>HTMLMetaElement</code></a> - <code>&lt;meta&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLMeterElement" target="_blank" rel="noopener noreferrer"><code>HTMLMeterElement</code></a> - <code>&lt;meter&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLModElement" target="_blank" rel="noopener noreferrer"><code>HTMLModElement</code></a> - <code>&lt;del&gt;</code> <code>&lt;ins&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLObjectElement" target="_blank" rel="noopener noreferrer"><code>HTMLObjectElement</code></a> - <code>&lt;object&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLOListElement" target="_blank" rel="noopener noreferrer"><code>HTMLOListElement</code></a> - <code>&lt;ol&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement" target="_blank" rel="noopener noreferrer"><code>HTMLOptGroupElement</code></a>- <code>&lt;optgroup&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLOptionElement" target="_blank" rel="noopener noreferrer"><code>HTMLOptionElement</code></a> - <code>&lt;option&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLOutputElement" target="_blank" rel="noopener noreferrer"><code>HTMLOutputElement</code></a> - <code>&lt;output&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLPictureElement" target="_blank" rel="noopener noreferrer"><code>HTMLPictureElement</code></a> - <code>&lt;picture&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLProgressElement" target="_blank" rel="noopener noreferrer"><code>HTMLProgressElement</code></a> - <code>&lt;progress&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLQuoteElement" target="_blank" rel="noopener noreferrer"><code>HTMLQuoteElement</code></a> - <code>&lt;q&gt;</code>、<code>&lt;blockquote&gt;</code>、<code>&lt;cite&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLScriptElement" target="_blank" rel="noopener noreferrer"><code>HTMLScriptElement</code></a> - <code>&lt;script&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLSelectElement" target="_blank" rel="noopener noreferrer"><code>HTMLSelectElement</code></a> - <code>&lt;select&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLSlotElement" target="_blank" rel="noopener noreferrer"><code>HTMLSlotElement</code></a> - <code>&lt;slot&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLSourceElement" target="_blank" rel="noopener noreferrer"><code>HTMLSourceElement</code></a> - <code>&lt;source&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLStyleElement" target="_blank" rel="noopener noreferrer"><code>HTMLStyleElement</code></a> - <code>&lt;style&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement" target="_blank" rel="noopener noreferrer"><code>HTMLTableCellElement</code></a> - <code>&lt;th&gt;</code> <code>&lt;td&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTableColElement" target="_blank" rel="noopener noreferrer"><code>HTMLTableColElement</code></a> - <code>&lt;colgroup&gt;</code> <code>&lt;col&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTableElement" target="_blank" rel="noopener noreferrer"><code>HTMLTableElement</code></a> - <code>&lt;table&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement" target="_blank" rel="noopener noreferrer"><code>HTMLTableRowElement</code></a> - <code>&lt;tr&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement" target="_blank" rel="noopener noreferrer"><code>HTMLTableSectionElement</code></a> - <code>&lt;thead&gt;</code>、<code>&lt;tbody&gt;</code>、<code>&lt;tfoot&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement" target="_blank" rel="noopener noreferrer"><code>HTMLTemplateElement</code></a> - <code>&lt;template&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement" target="_blank" rel="noopener noreferrer"><code>HTMLTextAreaElement</code></a> - <code>&lt;textarea&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTimeElement" target="_blank" rel="noopener noreferrer"><code>HTMLTimeElement</code></a> - <code>&lt;time&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTitleElement" target="_blank" rel="noopener noreferrer"><code>HTMLTitleElement</code></a> - <code>&lt;title&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLTrackElement" target="_blank" rel="noopener noreferrer"><code>HTMLTrackElement</code></a> - <code>&lt;track&gt;</code></li><li><a href="https://developer.mozilla.org/docs/Web/API/HTMLVideoElement" target="_blank" rel="noopener noreferrer"><code>HTMLVideoElement</code></a> - <code>&lt;video&gt;</code></li></ul><p>命名惯例是，“HTML”后跟一个元素或一组元素（采用大驼峰命名法），再后跟“元素”，但元素或元素分组部分并不遵循确切的模式。不必担心。您无需记住这些密码。 务必要知道它们的存在，以便在需要时查找。</p><p>如果您有一系列元素，那么还会有集合接口。例如，<a href="https://developer.mozilla.org/docs/Web/API/HTMLCollection/namedItem" target="_blank" rel="noopener noreferrer"><code>HTMLCollection.namedItem()</code></a> 方法会返回集合中第一个元素（其 <code>id</code> 或 <code>name</code> 属性与参数匹配），如果没有匹配的元素，则返回 null。</p><p>除了 <code>HTMLElement</code> 之外，有超过 30 个元素没有关联的 DOM 接口，其中包括 <code>&lt;address&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;aside&gt;</code> 和 <code>&lt;hgroup&gt;</code>。许多不支持任何非废弃的非全局属性的元素都有元素专属接口，如 <code>HTMLPElement</code>（<code>&lt;p&gt;</code> 元素）和 <a href="https://developer.mozilla.org/docs/Web/API/HTMLUnknownElement" target="_blank" rel="noopener noreferrer"><code>HTMLUnknownElement</code></a>（<code>&lt;😃&gt;</code> 或未定义的任何其他元素），但这些接口在从 <code>HTMLElement</code> 继承的属性和方法之上，不会在上面列出任何其他属性或方法。</p><h3 id="冗余的-api-方法和属性" tabindex="-1"><a class="header-anchor" href="#冗余的-api-方法和属性"><span>冗余的 API 方法和属性</span></a></h3><p>如果某个接口的方法或属性名称与其继承的接口相同，那么继承的方法或属性会覆盖继承的方法或属性。当我们分别使用 <code>imageInstance.alt</code> 和 <code>sectionInstance.offsetHeight</code> 访问上面的 <code>alt</code> 和 <code>offsetHeight</code> 属性时，代码没有识别访问的是哪个 API。</p><p>一般来说，与这两个示例一样，这不是问题。但有可能。例如，<a href="https://developer.mozilla.org/docs/Web/API/HTMLCollection/length" target="_blank" rel="noopener noreferrer"><code>HTMLCollection.length</code></a> 是只读的，而继承的 <a href="https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection" target="_blank" rel="noopener noreferrer"><code>HTMLOptionsCollection</code></a> 接口的长度属性（仅由 <code>&lt;select&gt;</code> 的 <code>options</code> 属性返回）也可用于设置集合大小。</p><h2 id="其他接口" tabindex="-1"><a class="header-anchor" href="#其他接口"><span>其他接口</span></a></h2><p>此外，还有其他接口可用于操控 DOM 节点的分支位置。为我们提供了 <a href="https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener" target="_blank" rel="noopener noreferrer"><code>addEventListener()</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener" target="_blank" rel="noopener noreferrer"><code>removeEventListener()</code></a> 的 <a href="https://developer.mozilla.org/docs/Web/API/EventTarget" target="_blank" rel="noopener noreferrer"><code>EventTarget</code></a> 接口会由 <a href="https://developer.mozilla.org/docs/Web/API/Node" target="_blank" rel="noopener noreferrer"><code>Node</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Window" target="_blank" rel="noopener noreferrer"><code>Window</code></a> 接口继承。而 Element、Document 和 DocumentFragment（我们在<a href="/blogs/web/html/template">自定义元素</a>中看到的这些接口）接口则继承自 Node，而 HTMLElement 接口则继承自 Element。</p><h3 id="node-接口" tabindex="-1"><a class="header-anchor" href="#node-接口"><span><code>node</code> <strong>接口</strong></span></a></h3><p>每种类型的 DOM 节点都由一个基于 <a href="https://developer.mozilla.org/docs/Web/API/Node" target="_blank" rel="noopener noreferrer"><code>Node</code></a> 的接口表示，该接口以与 DOM 树相关的元素的形式提供信息和方法。<code>Node</code> 接口支持查询节点以及向节点树添加节点。</p><p>Douglas Crockford 的著名“走 DOM”函数利用了 Node 的 <a href="https://developer.mozilla.org/docs/Web/API/Node/firstChild" target="_blank" rel="noopener noreferrer"><code>firstChild</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Node/nextSibling" target="_blank" rel="noopener noreferrer"><code>nextSibling</code></a> 属性。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> walk_the_DOM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> walk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  node</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">firstChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    walk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    node</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nextSibling</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们使用了 Node 的 <a href="https://developer.mozilla.org/docs/Web/API/Node/appendChild" target="_blank" rel="noopener noreferrer"><code>appendChild()</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Node/cloneNode" target="_blank" rel="noopener noreferrer"><code>cloneNode()</code></a> 方法来定义<a href="/blogs/web/html/template">自定义元素</a>。Node 接口提供了许多用于查询和操控 DOM 的实用属性和方法。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">customElements</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;star-rating&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  classextendsHTMLElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">      super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// Always call super first in constructor</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> starRating</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;star-rating-template&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> shadowRoot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">attachShadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        mode</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;open&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">      shadowRoot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">starRating</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cloneNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://developer.mozilla.org/docs/Web/API/Element/attachShadow" target="_blank" rel="noopener noreferrer"><code>attachShadow()</code></a> 方法是 Element 接口的一个方法。<a href="https://developer.mozilla.org/docs/Web/Web_Components/Using_shadow_DOM" target="_blank" rel="noopener noreferrer">Shadow DOM API</a> 还有一个 <a href="https://developer.mozilla.org/docs/Web/API/ShadowRoot" target="_blank" rel="noopener noreferrer"><code>shadowRoot</code></a> 接口，与文档的主 DOM 树分开渲染。</p><h3 id="document-和-htmldocument-接口" tabindex="-1"><a class="header-anchor" href="#document-和-htmldocument-接口"><span><code>Document</code> <strong>和</strong> <code>HTMLDocument</code> <strong>接口</strong></span></a></h3><p><a href="https://developer.mozilla.org/docs/Web/API/Document" target="_blank" rel="noopener noreferrer"><code>Document</code></a> 接口继承自 <code>Node</code>。它表示浏览器中加载的网页，无论文档是 HTML、SVG、XML、MathML 还是其他格式。<code>Document</code> 接口也继承自 <code>HTMLDocument</code> 接口。</p><p>借助 <code>document</code>，您可以快速访问节点类型，并创建特定元素类型的集合，例如 <code>document.body</code> 和 <code>document.styleSheets</code>。HTMLDocument 支持访问在 HTML 节点中找不到的文档相关信息，例如 <a href="https://developer.mozilla.org/docs/Web/API/Document/location" target="_blank" rel="noopener noreferrer"><code>Document.location</code></a>、<a href="https://developer.mozilla.org/docs/Web/API/Document/lastModified" target="_blank" rel="noopener noreferrer"><code>Document.lastModified</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Document/cookie" target="_blank" rel="noopener noreferrer"><code>Document.Cookie</code></a>。</p><p>根据通过文档界面显示的功能，可以使用多个 API，包括 <a href="https://developer.mozilla.org/docs/Web/API/HTML_Drag_and_Drop_API" target="_blank" rel="noopener noreferrer">Drag and Drop API</a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Fullscreen_API" target="_blank" rel="noopener noreferrer">FullScreen API</a>。两者都从 <code>Element</code> 继承。</p><h3 id="window-接口" tabindex="-1"><a class="header-anchor" href="#window-接口"><span><code>Window</code> <strong>接口</strong></span></a></h3><p>Window 接口包含 DOM 之外的全局可用项，可用于操控 DOM。Window 提供了 MDN 的 <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference" target="_blank" rel="noopener noreferrer">JavaScript</a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Document_Object_Model" target="_blank" rel="noopener noreferrer">DOM 引用</a>中所述的函数、命名空间、对象和构造函数。</p><p>Window 接口是包含文档的对象的 API。全局 <code>window</code> 对象是运行脚本的窗口。每个浏览器标签页都包含自己的 Window 对象。Window 界面可以查询标签页的内容以及整个窗口和设备。例如，<a href="https://developer.mozilla.org/docs/Web/API/Window/resizeTo" target="_blank" rel="noopener noreferrer"><code>resizeTo()</code></a> 方法可用于调整浏览器窗口的大小，<a href="https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio" target="_blank" rel="noopener noreferrer"><code>devicePixelRatio</code></a> 属性提供对设备显示像素的访问权限。当访问内容所在标签页（而不是标签页显示的 DOM 树）的相关信息时，该窗口可能是您要找的接口。</p><p>根据通过 Window 接口显示的功能，可以使用多种 API，包括 <a href="https://developer.mozilla.org/docs/Web/API/Worker" target="_blank" rel="noopener noreferrer">Web Workers</a> 和 <a href="https://developer.mozilla.org/docs/Web/API/IndexedDB_API" target="_blank" rel="noopener noreferrer">IndexedDB</a> API。</p>`,44),d=[n];function p(h,c){return l(),t("div",null,d)}const g=e(s,[["render",p],["__file","apis.html.vue"]]),m=JSON.parse('{"path":"/web/html/apis.html","title":"HTML API","lang":"zh-CN","frontmatter":{"date":"2024-03-31T00:00:00.000Z","category":"html","tag":["api","dom","aom"],"description":"HTML API 本系列文章的简介说“HTML 元素是构成文档对象模型的节点”。 我们已经讨论了元素节点的类型。在本部分中，我们将讨论用于查询这些节点的元素 API。 DOM 和 AOM DOM 是用于访问和处理文档的 API。DOM 是文档中所有节点的树。一些节点可以包含子节点，其他节点则不可以。树状结构包含各种元素及其属性，以及文本节点。 显示元素...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/html/apis.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"HTML API"}],["meta",{"property":"og:description","content":"HTML API 本系列文章的简介说“HTML 元素是构成文档对象模型的节点”。 我们已经讨论了元素节点的类型。在本部分中，我们将讨论用于查询这些节点的元素 API。 DOM 和 AOM DOM 是用于访问和处理文档的 API。DOM 是文档中所有节点的树。一些节点可以包含子节点，其他节点则不可以。树状结构包含各种元素及其属性，以及文本节点。 显示元素..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T10:18:51.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:tag","content":"api"}],["meta",{"property":"article:tag","content":"dom"}],["meta",{"property":"article:tag","content":"aom"}],["meta",{"property":"article:published_time","content":"2024-03-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T10:18:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTML API\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T10:18:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"DOM 和 AOM","slug":"dom-和-aom","link":"#dom-和-aom","children":[]},{"level":2,"title":"HTML Element API","slug":"html-element-api","link":"#html-element-api","children":[]},{"level":2,"title":"可用的元素接口","slug":"可用的元素接口","link":"#可用的元素接口","children":[{"level":3,"title":"冗余的 API 方法和属性","slug":"冗余的-api-方法和属性","link":"#冗余的-api-方法和属性","children":[]}]},{"level":2,"title":"其他接口","slug":"其他接口","link":"#其他接口","children":[{"level":3,"title":"node 接口","slug":"node-接口","link":"#node-接口","children":[]},{"level":3,"title":"Document 和 HTMLDocument 接口","slug":"document-和-htmldocument-接口","link":"#document-和-htmldocument-接口","children":[]},{"level":3,"title":"Window 接口","slug":"window-接口","link":"#window-接口","children":[]}]}],"git":{"createdTime":1724483645000,"updatedTime":1724494731000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":2}]},"readingTime":{"minutes":6.88,"words":2064},"filePathRelative":"web/html/apis.md","localizedDate":"2024年3月31日","excerpt":"\\n<p>本系列文章的简介说“HTML 元素是构成<a href=\\"https://developer.mozilla.org/docs/Web/API/Document_Object_Model\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">文档对象模型</a>的节点”。 我们已经讨论了元素节点的类型。在本部分中，我们将讨论用于查询这些节点的元素 API。</p>\\n<h2>DOM 和 AOM</h2>\\n<p>DOM 是用于访问和处理文档的 API。DOM 是文档中所有节点的树。一些节点可以包含子节点，其他节点则不可以。树状结构包含各种元素及其属性，以及文本节点。</p>","autoDesc":true}');export{g as comp,m as data};
