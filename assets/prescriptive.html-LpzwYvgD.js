import{_ as i,c as s,o as e,b as a}from"./app-BvxU_3ZH.js";const t="/blogs/assets/a-header-width-image-a-p-9d3a969232cde-CeNwLgr1.png",l="/blogs/assets/a-header-width-image-a-p-9d3a969232cde-CeNwLgr1.png",n="/blogs/assets/a-zoomed-crop-the-periw-a24648a2c221-DtqkvVyM.png",h={},d=a(`<h1 id="规范性语法" tabindex="-1"><a class="header-anchor" href="#规范性语法"><span>规范性语法</span></a></h1><p>bookmark_border</p><p><code>&lt;picture&gt;</code> 元素本身不会渲染任何内容，而是充当内部 <code>&lt;img&gt;</code> 元素的决策引擎，告知它要渲染什么内容。<code>&lt;picture&gt;</code> 遵循已由 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 元素设置的先例：包含各个 <code>&lt;source&gt;</code> 元素的封装容器元素。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> …</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> …</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> …</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> …</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该内部 <code>&lt;img&gt;</code> 还为不支持自适应图片的旧版浏览器提供了可靠的回退模式：如果用户的浏览器无法识别 <code>&lt;picture&gt;</code> 元素，该元素会被忽略。系统随后也会舍弃 <code>&lt;source&gt;</code> 元素，因为在没有 <code>&lt;video&gt;</code> 或 <code>&lt;audio&gt;</code> 父级的情况下，浏览器要么根本无法识别它们，要么没有关于这些元素的有意义的上下文。不过，任何浏览器都可以识别内部 <code>&lt;img&gt;</code> 元素，并且其 <code>src</code> 中指定的来源会按预期呈现。</p><h2 id="使用-picture-的-艺术指导-图片" tabindex="-1"><a class="header-anchor" href="#使用-picture-的-艺术指导-图片"><span>使用<code>&lt;picture&gt;</code>的“艺术指导”图片</span></a></h2><p>根据页面中图片的大小更改图片的内容或宽高比，通常称为“艺术导向型”自适应图片。<code>srcset</code> 和 <code>sizes</code> 可在隐形的情况下工作，根据用户浏览器的指示无缝替换源代码。不过，您有时需要更改不同断点之间的来源，以更好地突出内容，如同调整页面布局一样。 例如：中心焦点较小的全宽标题图片在大视口上可能效果较好：</p><figure><img src="`+t+'" alt="标题宽度图片：一株长春花，四周环绕着叶子和茎，有一只蜜蜂来访。" tabindex="0" loading="lazy"><figcaption>标题宽度图片：一株长春花，四周环绕着叶子和茎，有一只蜜蜂来访。</figcaption></figure><p>但是，当缩小尺寸以适应小视口时，图片的中心焦点可能会丢失：</p><figure><img src="'+l+'" alt="长春花标题宽度图片（按比例缩小）。蜜蜂几乎看不到。" tabindex="0" loading="lazy"><figcaption>长春花标题宽度图片（按比例缩小）。蜜蜂几乎看不到。</figcaption></figure><p>这些图片来源的主题是相同的，但为了在视觉上更好地聚焦于该主题，您需要让图片来源的比例在不同的断点之间发生变化。例如，更紧密地缩放图片中心，并剪裁掉边缘的部分细节：</p><figure><img src="'+n+`" alt="近距离拍摄的长春花色花卉剪裁。" tabindex="0" loading="lazy"><figcaption>近距离拍摄的长春花色花卉剪裁。</figcaption></figure><p>这种“剪裁”可以通过 CSS 来实现，但会导致用户请求组成该图片的所有数据，即使他们可能永远看不到这些数据。</p><p>每个 <code>source</code> 元素都有一些属性来定义选择该 <code>source</code> 的条件：<code>media</code>（接受媒体查询）和 <code>type</code>（接受媒体类型（以前称为“MIME 类型”）。系统会选择来源顺序中与用户当前浏览上下文匹配的第一个 <code>&lt;source&gt;</code>，并且该 <code>source</code> 上 <code>srcset</code> 属性的内容将用于确定该上下文的适当候选对象。在此示例中，第一个具有与用户视口尺寸匹配的 <code>media</code> 属性的 <code>source</code> 将被选中：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">sourcemedia=&quot;(min-width:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1200px)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;srcset=&quot;wide-crop.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">imgsrc=&quot;close-crop.jpg&quot;alt=&quot;…&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/poZNxyN?height=300&amp;theme-id=light&amp;default-tab=html%2Ccss%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上的 web-dot-dev 的 Pen poZNxyN"></iframe><p>您应始终按顺序指定内部 <code>img</code>，如果所有 <code>source</code> 元素都与其 <code>media</code> 或 <code>type</code> 条件不匹配，则图片将充当“默认”来源。如果您使用的是 <code>min-width</code> 媒体查询，则需要首先拥有最大的来源，如前面的代码所示。使用 <code>max-width</code> 媒体查询时，应将最小的来源放在最前面。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">sourcemedia=&quot;(max-width:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 400px)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;srcset=&quot;mid-bp.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">sourcemedia=&quot;(max-width:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 800px)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;srcset=&quot;high-bp.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">imgsrc=&quot;highest-bp.jpg&quot;alt=&quot;…&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当您根据您指定的条件选择来源时，<code>source</code> 上的 <code>srcset</code> 属性会传递给 <code>&lt;img&gt;</code>，就像在 <code>&lt;img&gt;</code> 本身中定义属性一样。这意味着，您也可以自由使用 <code>sizes</code> 优化 Art Director 图片来源。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">sourcemedia=&quot;(min-width:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 800px)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;srcset=&quot;high-bp-1600.jpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1600w,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> high-bp-1000.jpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000w</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">sourcesrcset=&quot;lower-bp-1200.jpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1200w,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> lower-bp-800.jpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 800w</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">imgsrc=&quot;fallback.jpg&quot;alt=&quot;…&quot;sizes=&quot;calc(100vw</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2em)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，如果图片的比例因所选 <code>&lt;source&gt;</code> 元素而异，就会引发性能问题：<code>&lt;img&gt;</code> 仅支持单个 <code>width</code> 和 <code>height</code> 属性，但<a href="/blogs/web/images/prescriptive##">省略这些属性可能会导致用户体验明显下降</a>。为了说明这一点，在 HTML 规范的基础上，<a href="https://github.com/whatwg/html/pull/5894" target="_blank" rel="noopener noreferrer">相对新近</a>但<a href="https://developer.mozilla.org/docs/Web/HTML/Element/source#browser_compatibility" target="_blank" rel="noopener noreferrer">得到了很好的支持</a>，允许对 <code>&lt;source&gt;</code> 元素使用 <code>height</code> 和 <code>width</code> 属性。这些调整可以减少布局偏移，就像在 <code>&lt;img&gt;</code> 上一样，并在布局中为选择的任何 <code>&lt;source&gt;</code> 元素预留适当的空间。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      media</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;(min-width: 800px)&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      srcset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;high-bp-1600.jpg 1600w, high-bp-1000.jpg 1000w&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1600&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;800&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">imgsrc=&quot;fallback.jpg&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      srcset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lower-bp-1200.jpg 1200w, lower-bp-800.jpg 800w&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;calc(100vw - 2em)&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1200&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;750&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;…&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请务必注意，艺术设计不仅仅能用于根据视口大小来做出决策，而且应该使用更多功能，因为使用 <code>srcset</code>/<code>sizes</code> 可以更高效地处理大多数情况。例如，选择更适合用户偏好的配色方案的图片来源：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">sourcemedia=&quot;(prefers-color-scheme:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dark)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&quot;srcset=&quot;hero-dark.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">imgsrcset=&quot;hero-light.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/MWBbPJm?height=500&amp;theme-id=light&amp;default-tab=html%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="web-dot-dev 上的 Pen MWBbPJm"></iframe><h3 id="type-属性" tabindex="-1"><a class="header-anchor" href="#type-属性"><span><code>type</code> <strong>属性</strong></span></a></h3><p>借助 <code>type</code> 属性，您可以使用 <code>&lt;picture&gt;</code> 元素的单一请求决策引擎，仅向支持这些格式的浏览器提供图片格式。</p><p>正如您在<a href="/blogs/web/images/avif#browser_support">图片格式和压缩</a>中所学的，浏览器无法解析的编码甚至无法被识别为图片数据。</p><p>在引入 <code>&lt;picture&gt;</code> 元素之前，用于提供新图片格式的最可行前端解决方案要求浏览器先请求并尝试解析图片文件，然后再确定是否舍弃该文件并加载后备图片。一个常见的示例是包含以下几行的脚本：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">imgsrc=&quot;image.webp&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    data-fallback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;image.jpg&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    onerror</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;this.src=this.getAttribute(&#39;data-fallback&#39;);this.onerror=null;&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用此模式时，仍会在每个浏览器中发出 <code>image.webp</code> 请求，这意味着，对于不支持 WebP 的浏览器，传输是浪费的。如果浏览器无法解析 WebP 编码，则会抛出 <code>onerror</code> 事件，并将 <code>data-fallback</code> 值交换为 <code>src</code>。这是一个非常浪费的解决方案，但是，这种方法是唯一可用的前端选项。请注意，浏览器在任何自定义脚本有机会运行（甚至被解析）之前就开始发出图片请求，因此我们不能抢占此过程。</p><p><code>&lt;picture&gt;</code> 元素经过专门设计，可避免此类冗余请求。虽然在没有请求的情况下，浏览器仍无法识别不支持的格式，但 <code>type</code> 属性会事先就源代码编码向浏览器发出警告，以便它决定是否发出请求。</p><p>在 <code>type</code> 属性中，您需要提供每个 <code>&lt;source&gt;</code> 的 <code>srcset</code> 属性中指定的图片来源的<a href="https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/MIME_types" target="_blank" rel="noopener noreferrer">媒体类型（以前称为 MIME 类型）</a>。这为浏览器提供了立即确定是否可以在不发出任何外部请求的情况下解码该 <code>source</code> 提供的候选图片所需的全部信息。如果系统无法识别媒体类型，则忽略 <code>&lt;source&gt;</code> 及其所有候选项，然后浏览器会继续执行操作。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">sourcetype=&quot;image/webp&quot;srcset=&quot;pic.webp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">imgsrc=&quot;pic.jpg&quot;alt=&quot;...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在本例中，任何支持 WebP 编码的浏览器都将识别 <code>&lt;source&gt;</code> 元素的 <code>type</code> 属性中指定的 <code>image/webp</code> 媒体类型，并选择该 <code>&lt;source&gt;</code>，并且由于我们只在 <code>srcset</code> 中提供了一个候选媒体，会指示内部 <code>&lt;img&gt;</code> 请求、传输和呈现 <code>pic.webp</code>。任何不支持 WebP 的浏览器都会忽略 <code>source</code>，并且不存在任何相反的指令，<code>&lt;img&gt;</code> 将呈现 <code>src</code> 的内容，就像自 1992 年以来所做的那样。当然，您无需在此处使用 <code>type=&quot;image/jpeg&quot;</code> 指定第二个 <code>&lt;source&gt;</code> 元素，您可以假定 JPEG 普遍支持 JPEG。</p><p>无论用户的浏览环境如何，通过单次文件传输即可实现上述所有目的，并且不会将带宽浪费在无法呈现的图片源上。这也是前瞻性思维：更新更高效的文件格式会自带媒体类型，得益于 <code>picture</code>（无需 JavaScript、没有服务器端依赖项，以及 <code>&lt;img&gt;</code> 的所有速度），我们才能充分利用这些媒体类型。</p><h2 id="自适应图片的未来" tabindex="-1"><a class="header-anchor" href="#自适应图片的未来"><span>自适应图片的未来</span></a></h2><p>此处讨论的所有标记模式都是标准化方面的重大提升：像 <code>&lt;img&gt;</code> 一样，更改那些已建立且对网络的核心的功能的功能绝非易事，至少可以说，这些更改旨在解决一系列问题。如果您觉得这些标记模式有很大的改进空间，那么您完全没有问题。从一开始，这些标准就旨在为未来的技术提供基准。</p><p>所有这些解决方案都必定依赖于标记，以便包含在来自服务器的初始载荷中，并及时到达浏览器来请求图片来源，这一限制导致 <code>sizes</code> 属性显而易见。</p><p>不过，由于网络平台中引入了这些功能，因此我们引入了延迟图片请求的原生方法。 在了解页面布局之前，系统不会请求具有 <code>loading=&quot;lazy&quot;</code> 属性的 <code>&lt;img&gt;</code> 元素，以便将针对用户初始视口之外的图片的请求推迟到渲染页面过程中的后续请求，从而可能避免不必要的请求。由于在发出这些请求时浏览器就完全能理解页面布局，因此建议了 <a href="https://github.com/whatwg/html/pull/8008" target="_blank" rel="noopener noreferrer"><code>sizes=&quot;auto&quot;</code> 属性作为 HTML 规范的补充</a>，以避免在这些情况下手动编写的 <code>sizes</code> 属性。</p><p>此外，还陆续向 <code>&lt;picture&gt;</code> 元素添加了一些新增内容，以配合我们对页面布局样式设置的一些特别激动人心的更改。虽然视口信息是制定高级布局决策的基础，但它妨碍了我们采用完全组件级的开发方法，也就是说，一种组件可以放到页面布局的任何部分，其样式响应该组件本身所占空间。这个问题促使我们创建了 <em>容器查询<a href="https://www.oddbird.net/2022/08/18/cq-syntax/" target="_blank" rel="noopener noreferrer"></a></em> ：一种根据父级容器的大小来设置元素样式的方法，而不是只根据视口来设置样式。</p><p>虽然容器查询语法刚刚稳定，浏览器支持也<a href="https://caniuse.com/css-container-queries" target="_blank" rel="noopener noreferrer">非常有限</a>，但在撰写本文时，添加支持 <code>&lt;picture&gt;</code> 元素的浏览器技术为 <code>&lt;picture&gt;</code> 元素提供执行相同操作的方法：一种潜在的 <code>container</code> 属性，它允许根据 <code>&lt;picture&gt;</code> 元素的 <code>&lt;img&gt;</code> 占用的空间（而不是根据视口的大小）选择 <code>&lt;source&gt;</code> 选择条件。</p><p>如果这听起来有点含糊，但有充分的理由：这些 Web 标准讨论仍在进行中，但还远远没有定好 - 您目前还不能使用它们。</p><p>虽然响应式图片标记有望随着时间的推移变得更易于使用，就像任何网络技术一样，但有许多服务、技术和框架可帮助减轻这种手写标记的负担。在下一个单元中，我们会介绍如何将学到的有关图片格式、压缩和响应式图片的所有信息集成到现代开发工作流中。</p>`,44),p=[d];function r(k,o){return e(),s("div",null,p)}const g=i(h,[["render",r],["__file","prescriptive.html.vue"]]),u=JSON.parse('{"path":"/web/images/prescriptive.html","title":"规范性语法","lang":"zh-CN","frontmatter":{"date":"2023-02-01T00:00:00.000Z","category":"图片","description":"规范性语法 bookmark_border <picture> 元素本身不会渲染任何内容，而是充当内部 <img> 元素的决策引擎，告知它要渲染什么内容。<picture> 遵循已由 <audio> 和 <video> 元素设置的先例：包含各个 <source> 元素的封装容器元素。 该内部 <img> 还为不支持自适应图片的旧版浏览器提供了可靠的回退...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/images/prescriptive.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"规范性语法"}],["meta",{"property":"og:description","content":"规范性语法 bookmark_border <picture> 元素本身不会渲染任何内容，而是充当内部 <img> 元素的决策引擎，告知它要渲染什么内容。<picture> 遵循已由 <audio> 和 <video> 元素设置的先例：包含各个 <source> 元素的封装容器元素。 该内部 <img> 还为不支持自适应图片的旧版浏览器提供了可靠的回退..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T10:18:51.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:published_time","content":"2023-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T10:18:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"规范性语法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T10:18:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"使用<picture>的“艺术指导”图片","slug":"使用-picture-的-艺术指导-图片","link":"#使用-picture-的-艺术指导-图片","children":[{"level":3,"title":"type 属性","slug":"type-属性","link":"#type-属性","children":[]}]},{"level":2,"title":"自适应图片的未来","slug":"自适应图片的未来","link":"#自适应图片的未来","children":[]}],"git":{"createdTime":1724483645000,"updatedTime":1724494731000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":2}]},"readingTime":{"minutes":9.69,"words":2906},"filePathRelative":"web/images/prescriptive.md","localizedDate":"2023年2月1日","excerpt":"\\n<p>bookmark_border</p>\\n<p><code>&lt;picture&gt;</code> 元素本身不会渲染任何内容，而是充当内部 <code>&lt;img&gt;</code> 元素的决策引擎，告知它要渲染什么内容。<code>&lt;picture&gt;</code> 遵循已由 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 元素设置的先例：包含各个 <code>&lt;source&gt;</code> 元素的封装容器元素。</p>\\n<div class=\\"language-html line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"html\\" data-title=\\"html\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">picture</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&nbsp; &nbsp;&lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">source</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> …</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&nbsp; &nbsp;&lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">source</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> …</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&nbsp; &nbsp; &lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">img</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> …</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">picture</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> …</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{g as comp,u as data};
