import{_ as e,c as a,o as i,b as o}from"./app-BvxU_3ZH.js";const t={},l=o(`<h1 id="对话框" tabindex="-1"><a class="header-anchor" href="#对话框"><span>对话框</span></a></h1><p>模态对话框是网页上一种特殊类型的弹出式框：会打断用户专注于自身的弹出式窗口。有一些有效的<a href="https://www.nngroup.com/articles/modal-nonmodal-dialog/" target="_blank" rel="noopener noreferrer">弹出对话框用例</a>，但在执行此操作之前应考虑清楚。模态对话框会迫使用户专注于特定内容，并暂时忽略页面的其余部分。</p><p>对话框可以是模态（只能与对话框中的内容互动）或非模态（仍然可以与对话框外部的内容互动）。模态对话框会显示在其余页面内容之上。页面的其余部分是<a href="/blogs/web/html/focus">自然</a>的，默认情况下会被半透明背景遮挡。</p><p>用于创建对话框的语义 HTML <a href="https://developer.mozilla.org/docs/Web/HTML/Element/dialog" target="_blank" rel="noopener noreferrer"><code>&lt;dialog&gt;</code></a> 元素包含语义、键盘交互以及 <a href="https://developer.mozilla.org/docs/Web/API/HTMLDialogElement" target="_blank" rel="noopener noreferrer"><code>HTMLDialogElement</code></a> 接口的所有属性和方法。</p><h2 id="模态对话框" tabindex="-1"><a class="header-anchor" href="#模态对话框"><span>模态对话框</span></a></h2><p>下面是一个模态 <code>&lt;dialog&gt;</code> 的示例。使用“打开模态对话框”按钮打开对话框。对话框打开后，可通过以下三种方式关闭：Esc 键、提交包含已设置 <a href="https://developer.mozilla.org/docs/Web/HTML/Element/button#attr-formmethod" target="_blank" rel="noopener noreferrer"><code>formmethod=&quot;dialog&quot;</code></a> 的按钮的表单（或者如果表单本身已设置 <code>method=&quot;dialog&quot;</code>）以及 <a href="https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close" target="_blank" rel="noopener noreferrer"><code>HTMLDialogElement.close()</code></a> 方法。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/BaOBLNy?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="来自 Codepen 上的 web-dot-dev 的 Pen BaOBLNy" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p><code>HTMLDialogElement</code> 有三个主要方法，以及从 <a href="/blogs/web/html/apis"><code>HTMLElement</code></a> 继承的所有方法。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">dialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/* opens the dialog */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">dialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">showModal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/* opens the dialog as a modal */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">dialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/* closes the dialog */</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于此 <code>&lt;dialog&gt;</code> 是通过 <a href="https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/showModal" target="_blank" rel="noopener noreferrer"><code>HTMLDialogElement.showModal()</code></a> 方法打开的，因此它是一种模态对话框。打开模态对话框会停用并遮盖除对话框本身之外的所有内容。如果将鼠标悬停在对话框之外的界面上，您会注意到所有元素的行为就好像设置了 <a href="https://developer.mozilla.org/docs/Web/CSS/pointer-events" target="_blank" rel="noopener noreferrer"><code>pointer-events: none;</code></a> 一样；即使是打开对话框的按钮也不会对互动做出响应。</p><p>对话框打开后，焦点会移到对话框中。焦点位于该对话框中按键盘顺序导航顺序的第一个元素上。 如果您反复按 <code>tab</code> 键，您会注意到，当模态对话框打开时，只有对话框中的内容可以获得焦点。只要对话框处于打开状态，模态对话框以外的所有内容都会休眠。</p><p>当对话框关闭时，无论是否处于模态状态，焦点都会返回到打开对话框的元素。如果您以编程方式打开并非基于用户操作的对话框，请重新考虑。如果必须这样做，请确保将焦点放回对话框打开之前的位置，尤其是当用户没有与对话框互动就关闭对话框时。</p><p>有一个全局 <a href="/blogs/web/html/focus#the_inert_attribute"><code>inert</code></a> 属性可用于停用某个元素及其所有后代（活跃的对话框除外）。使用 <code>showModal()</code> 打开模态对话框时，可以免费执行惰化或停用；系统不会明确设置该属性。</p><p>可以使用 <a href="https://developer.mozilla.org/docs/Web/CSS/::backdrop" target="_blank" rel="noopener noreferrer"><code>::backdrop</code></a> 伪元素设置会遮挡除对话框以外所有其他内容的背景幕。仅当使用 <code>.showModal()</code> 方法显示 <code>&lt;dialog&gt;</code> 时，才会显示背景。该伪元素会匹配所有背景，包括使用 <a href="https://developer.mozilla.org/docs/Web/API/Fullscreen_API" target="_blank" rel="noopener noreferrer">FullScreen API</a> 时显示的背景，例如在全屏模式下观看视频时，该模式与屏幕或显示器的宽高比不同。</p><h2 id="非模态对话框" tabindex="-1"><a class="header-anchor" href="#非模态对话框"><span>非模态对话框</span></a></h2><p><code>HTMLDialogElement.show()</code> 同样会打开一个对话框，但不会添加背景，也不会导致任何内容变得惰化。使用 Esc 键不会关闭非模态对话框。因此，更重要的是确保添加一种用于关闭非模态对话框的方法。这样做时，如果距离对话框较近，您会意识到焦点将转到打开对话框的元素，这可能不是最佳用户体验。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/bGKQvza?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="由 web-dot-dev 在 Codepen 上发布的 Pen bGKQvza" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p>虽然规范没有正式要求提供用于关闭对话框的按钮，但应将其视为必需按钮。按 Esc 键会关闭模态对话框，但不会关闭非模态对话框。能够获得焦点的可见按钮可改进无障碍功能和用户体验。</p><h2 id="关闭对话框" tabindex="-1"><a class="header-anchor" href="#关闭对话框"><span>关闭对话框</span></a></h2><p>您无需使用 <code>HTMLDialogElement.close()</code> 方法关闭对话框。您根本不需要 JavaScript。如需在不使用 JavaScript 的情况下关闭 <code>&lt;dialog&gt;</code>，请添加带有对话框方法的表单，方法是在 <code>&lt;form&gt;</code> 上设置 <code>method=&quot;dialog&quot;</code> 或对按钮设置 <code>formmethod=&quot;dialog&quot;</code>。</p><p>当用户通过 <code>dialog</code> 方法提交数据时，用户输入的数据的状态将保持不变。有提交事件时，表单会经过限制条件验证（除非设置了 <code>novalidate</code>）- 用户数据既不会被清除，也不会提交。不含 JavaScript 的关闭按钮可写为：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dialog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;dialog&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;submit&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> autofocus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;close&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可能已经注意到，在此示例中，为关闭 <code>&lt;button&gt;</code> 设置了 <a href="https://developer.mozilla.org/docs/Web/HTML/Global_attributes/autofocus" target="_blank" rel="noopener noreferrer"><code>autofocus</code></a> 属性。在 <code>&lt;dialog&gt;</code> 内设置了 <code>autofocus</code> 属性的元素在网页加载时不会获得焦点（除非页面在加载时对话框可见）。不过，当对话框打开时，它们将获得焦点。</p><p>默认情况下，当对话框打开时，对话框中的第一个可聚焦元素将获得焦点，除非对话框中的其他元素设置了 <code>autofocus</code> 属性。为关闭按钮设置 <code>autofocus</code> 属性可确保该按钮在对话框打开时获得焦点。但是，<a href="/blogs/web/html/focus#giving_focus_to_interactive_elements">在 <code>&lt;dialog&gt;</code> 中包含 <code>autofocus</code></a> 时，只是要仔细考虑。系统会跳过自动聚焦元素之前出现的序列中的所有元素。 我们将在<a href="/blogs/web/html/focus">专题课程</a>中进一步讨论此属性。</p><p><a href="https://developer.mozilla.org/docs/Web/API/HTMLDialogElement" target="_blank" rel="noopener noreferrer"><code>HTMLDialogElement</code></a> 接口包含一个 <a href="https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/returnValue" target="_blank" rel="noopener noreferrer"><code>returnValue</code></a> 属性。使用 <code>method=&quot;dialog&quot;</code> 提交表单时，会将 <code>returnValue</code> 设置为用于提交表单的提交按钮的 <code>name</code>（如果有）。如果我们编写了 <code>&lt;button type=&quot;submit&quot; name=&quot;toasty&quot;&gt;close&lt;/button&gt;</code>，<code>returnValue</code> 将为 <code>toasty</code>。</p><p>对话框打开时，系统会显示布尔值 <a href="https://developer.mozilla.org/docs/Web/HTML/Element/dialog#attr-open" target="_blank" rel="noopener noreferrer"><code>open</code></a> 属性，这意味着对话框处于活动状态，可以与之互动。当通过添加 <code>open</code> 属性（而不是通过 <code>.show()</code> 或 <code>.showModal()</code>）打开对话框时，对话框将无模态。<a href="https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/open" target="_blank" rel="noopener noreferrer"><code>HTMLDialogElement.open</code></a> 属性会返回 <code>true</code> 或 <code>false</code>，具体取决于对话框是否可用于互动，而不是对话框是否为模态对话框。</p><p>虽然 JavaScript 是打开对话框的首选方法（包括在网页加载时添加 <code>open</code> 属性，然后使用 <code>.close()</code> 移除该属性），但有助于确保即使 JavaScript 不可用，对话框仍然可用。</p><h2 id="其他详情" tabindex="-1"><a class="header-anchor" href="#其他详情"><span>其他详情</span></a></h2><h3 id="不使用-tabindex" tabindex="-1"><a class="header-anchor" href="#不使用-tabindex"><span>不使用 <code>tabindex</code></span></a></h3><p>为打开对话框而激活的元素和其中包含的关闭按钮（可能还包括其他内容）可以获得焦点并具有互动性。<code>&lt;dialog&gt;</code> 元素不具有互动性，也不会获得焦点。请勿将 <code>tabindex</code> 属性添加到对话框本身。</p><h3 id="aria-角色" tabindex="-1"><a class="header-anchor" href="#aria-角色"><span>ARIA 角色</span></a></h3><p>隐式角色为 <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/dialog_role" target="_blank" rel="noopener noreferrer"><code>dialog</code></a>。如果对话框是一个确认窗口，用于传达需要确认或其他用户响应的重要消息，请设置 <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/alertdialog_role" target="_blank" rel="noopener noreferrer"><code>role=&quot;alertdialog&quot;</code></a>。对话框还应具有可供访问的名称。如果可见文本可提供无障碍名称，请添加 <code>aria-labelledby=&quot;idOfLabelingText&quot;</code>。</p><h3 id="css-默认值" tabindex="-1"><a class="header-anchor" href="#css-默认值"><span>CSS 默认值</span></a></h3><p>请注意，浏览器为 <code>dialog</code> 提供默认样式。Firefox、Chrome 和 Edge 在其用户代理样式表中设置 <code>color: CanvasText;</code> <code>background-color: Canvas;</code>，而 Safari 则在其用户代理样式表中设置 <code>color: black; background-color: white;</code>。<code>color</code> 继承自 <code>dialog</code>，而不是 <code>body</code> 或 <code>:root</code>，这可能出乎意料。<code>background-color</code> 属性未继承。</p>`,34),r=[l];function s(d,n){return i(),a("div",null,r)}const h=e(t,[["render",s],["__file","dialog.html.vue"]]),p=JSON.parse('{"path":"/web/html/dialog.html","title":"对话框","lang":"zh-CN","frontmatter":{"date":"2024-03-31T00:00:00.000Z","category":"html","tags":["dialog"],"description":"对话框 模态对话框是网页上一种特殊类型的弹出式框：会打断用户专注于自身的弹出式窗口。有一些有效的弹出对话框用例，但在执行此操作之前应考虑清楚。模态对话框会迫使用户专注于特定内容，并暂时忽略页面的其余部分。 对话框可以是模态（只能与对话框中的内容互动）或非模态（仍然可以与对话框外部的内容互动）。模态对话框会显示在其余页面内容之上。页面的其余部分是自然的，...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/html/dialog.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"对话框"}],["meta",{"property":"og:description","content":"对话框 模态对话框是网页上一种特殊类型的弹出式框：会打断用户专注于自身的弹出式窗口。有一些有效的弹出对话框用例，但在执行此操作之前应考虑清楚。模态对话框会迫使用户专注于特定内容，并暂时忽略页面的其余部分。 对话框可以是模态（只能与对话框中的内容互动）或非模态（仍然可以与对话框外部的内容互动）。模态对话框会显示在其余页面内容之上。页面的其余部分是自然的，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T10:18:51.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:tag","content":"dialog"}],["meta",{"property":"article:published_time","content":"2024-03-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T10:18:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对话框\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T10:18:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"模态对话框","slug":"模态对话框","link":"#模态对话框","children":[]},{"level":2,"title":"非模态对话框","slug":"非模态对话框","link":"#非模态对话框","children":[]},{"level":2,"title":"关闭对话框","slug":"关闭对话框","link":"#关闭对话框","children":[]},{"level":2,"title":"其他详情","slug":"其他详情","link":"#其他详情","children":[{"level":3,"title":"不使用 tabindex","slug":"不使用-tabindex","link":"#不使用-tabindex","children":[]},{"level":3,"title":"ARIA 角色","slug":"aria-角色","link":"#aria-角色","children":[]},{"level":3,"title":"CSS 默认值","slug":"css-默认值","link":"#css-默认值","children":[]}]}],"git":{"createdTime":1724483645000,"updatedTime":1724494731000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":2}]},"readingTime":{"minutes":7,"words":2100},"filePathRelative":"web/html/dialog.md","localizedDate":"2024年3月31日","excerpt":"\\n<p>模态对话框是网页上一种特殊类型的弹出式框：会打断用户专注于自身的弹出式窗口。有一些有效的<a href=\\"https://www.nngroup.com/articles/modal-nonmodal-dialog/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">弹出对话框用例</a>，但在执行此操作之前应考虑清楚。模态对话框会迫使用户专注于特定内容，并暂时忽略页面的其余部分。</p>\\n<p>对话框可以是模态（只能与对话框中的内容互动）或非模态（仍然可以与对话框外部的内容互动）。模态对话框会显示在其余页面内容之上。页面的其余部分是<a href=\\"/blogs/web/html/focus\\">自然</a>的，默认情况下会被半透明背景遮挡。</p>","autoDesc":true}');export{h as comp,p as data};
