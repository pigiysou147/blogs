import{_ as t,r,c as d,e as n,d as e,b as a,a as i,o as l}from"./app-Be6S8-JU.js";const o="/blogs/assets/the-states-the-pulser-an-680997c945c6b-aL_u6juj.svg",h="/blogs/assets/the-same-diagram-before-917523aac997-BDdV_dzr.svg",p="/blogs/assets/a-bezier-a-progression-v-8af786828ec0e-IIk9YwFM.svg",c={},k=a('<h1 id="动画" tabindex="-1"><a class="header-anchor" href="#动画"><span>动画</span></a></h1><p>动画是突出互动元素的好方法，可为设计增添趣味和乐趣。在本单元中，您将了解如何使用 CSS 添加和控制动画效果。</p><p>有时，您会在界面上看到一些小帮助程序，这些程序会在您点击它们时提供有关其所在部分的实用信息。这类事件通常具有闪烁的动画，让您知道相关信息就在那里，并且应该与之互动。 此模块将介绍如何使用 CSS 创建这些帮助程序和其他动画。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/mdRXGeJ?height=300&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen mdRXGeJ" style="color-scheme:initial;box-sizing:inherit;border:0px;height:300px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p>闪烁的图标是确保用户关注重要信息的一种方式。</p><p>您可以使用 CSS 设置带有关键帧的动画序列。这些序列可以是基本的单状态动画，也可以是复杂的基于时间的序列。</p><h2 id="什么是关键帧" tabindex="-1"><a class="header-anchor" href="#什么是关键帧"><span>什么是关键帧？</span></a></h2><p>在大多数动画工具中，关键帧是用来为时间轴上的时间戳分配动画状态的机制。</p><p>例如，下方是闪烁的“helper”圆点的时间轴。动画会运行 1 秒钟，并有 2 种状态。</p><figure><img src="'+o+'" alt="脉冲器动画在 1 秒时间范围内的状态" tabindex="0" loading="lazy"><figcaption>脉冲器动画在 1 秒时间范围内的状态</figcaption></figure><p>脉冲动画的状态。</p><p>其中每种动画状态的开始和结束位置都有一个特定点。您可以使用关键帧在时间轴上映射这些元素。</p><figure><img src="'+h+'" alt="同一个图表，不过这次是带有关键帧" tabindex="0" loading="lazy"><figcaption>同一个图表，不过这次是带有关键帧</figcaption></figure><p>带有关键帧的脉冲动画。</p><h3 id="keyframes" tabindex="-1"><a class="header-anchor" href="#keyframes"><span><code>@keyframes</code></span></a></h3>',15),m=a(`<p>CSS <a href="https://developer.mozilla.org/docs/Web/CSS/@keyframes" target="_blank" rel="noopener noreferrer"><code>@keyframes</code></a> 与动画关键帧基于相同的概念。</p><p>下面是一个具有两种状态的示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@keyframes</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> my-animation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    from { </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        transform: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">translateY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }  to { </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        transform: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">translateY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个重要部分是<a href="https://developer.mozilla.org/docs/Web/CSS/custom-ident" target="_blank" rel="noopener noreferrer">自定义标识符 (<code>custom-ident</code>)</a>，即关键帧规则的名称。此示例中的标识符为 <code>my-animation</code>。自定义标识符的作用类似于<a href="/blogs/web/css/functions">函数</a>名称，允许您在 CSS 代码中的其他位置引用关键帧规则。</p><p><strong>注意</strong> ：\`\` 在 CSS 中的各个位置都有使用，可让您为内容提供自己的名称。这些标识符区分大小写，并且在某些情况下，有些字词是您无法使用的。例如，在 CSS 网格中为行命名时，不能使用 <code>span</code> 一词。</p><p>在关键帧规则中，<code>from</code> 和 <code>to</code> 是代表 <code>0%</code> 和 <code>100%</code> 的关键字，这两个关键字是动画的起点和终点。您可以重新创建相同的规则，如下所示：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@keyframes</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> my-animation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    0% { </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        transform: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">translateY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    100% {   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        transform: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">translateY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以在时间范围内添加任意数量的排名。 在脉冲辅助程序示例中，有两种状态可转换为两个关键帧。这意味着您在关键帧规则中有两个位置，分别表示每个关键帧的变化。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@keyframes</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> pulse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    0% {   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        opacity: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    50% { </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        transform: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">scale</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        opacity: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/mdRXGeJ?height=300&amp;theme-id=light&amp;default-tab=css%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen mdRXGeJ" style="color-scheme:initial;box-sizing:inherit;border:0px;height:300px;width:854px;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,10),b=i("h2",{id:"animation-属性",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#animation-属性"},[i("span",null,[i("code",null,"animation"),e(" 属性")])])],-1),g=i("p",null,[e("如需在 CSS 规则中使用 "),i("code",null,"@keyframes"),e("，您可以单独定义各种动画属性，也可以使用 "),i("a",{href:"https://developer.mozilla.org/docs/Web/CSS/animation",target:"_blank",rel:"noopener noreferrer"},[i("code",null,"animation")]),e(" 简写属性。")],-1),y=i("h3",{id:"animation-duration",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#animation-duration"},[i("span",null,[i("code",null,"animation-duration")])])],-1),u=a(`<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-duration: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://developer.mozilla.org/docs/Web/CSS/animation-duration" target="_blank" rel="noopener noreferrer">Animation-duration</a> 属性定义了 <code>@keyframes</code> 时间轴的时长值。该时长默认为 0 秒，表示动画仍会运行，但播放速度过快，您无法看到。时间值不能为负数。</p><h3 id="animation-timing-function" tabindex="-1"><a class="header-anchor" href="#animation-timing-function"><span><code>animation-timing-function</code></span></a></h3>`,3),A=a(`<p>为帮助在动画中重现自然运动，您可以使用计时函数来计算动画在每个点的速度。计算值通常是<em>曲线</em>的，使得动画在 <code>animation-duration</code> 期间以可变速度运行，使元素在浏览器计算出的值超出 <code>@keyframes</code> 中定义的值时看起来会弹跳。</p><p>CSS 中有多个关键字可作为预设值使用，它们用作 <a href="https://developer.mozilla.org/docs/Web/CSS/animation-timing-function" target="_blank" rel="noopener noreferrer">animate-timing-function</a> 的值：<code>linear</code>、<code>ease</code>、<code>ease-in</code>、<code>ease-out</code>、<code>ease-in-out</code>。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-timing-function: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">ease-in-out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/YzNeJbL?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Pen YzNeJbL（由 web-dot-dev 在 Codepen 上发布）" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,4),B=a(`<p>加/减速函数值显示为曲线，因为加/减速功能是使用<strong>贝塞尔曲线</strong>（一种用于对速度建模的函数）计算得出的。每个计时函数关键字（例如 <code>ease</code>）都引用预定义的贝塞尔曲线。在 CSS 中，您可以直接使用 <code>cubic-bezier()</code> 函数定义贝塞尔曲线，该函数接受四个数值：<code>x1</code>、<code>y1</code>、<code>x2</code>、<code>y2</code>。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-timing-function: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cubic-bezier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.58</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些值会沿着 X 轴和 Y 轴绘制曲线的每个部分。</p><p><img src="`+p+`" alt="进度与时间图表上的贝塞尔曲线" loading="lazy">贝塞尔曲线示例。</p><p>理解贝塞尔曲线非常复杂。可视化工具（例如 Lea Verou 的这个<a href="https://cubic-bezier.com/" target="_blank" rel="noopener noreferrer">生成器</a>）非常有用。</p><h4 id="steps-加-减速函数" tabindex="-1"><a class="header-anchor" href="#steps-加-减速函数"><span><code>steps</code> 加/减速函数</span></a></h4><p>有时，您可能希望通过间隔（而不是沿着曲线）移动，对动画进行更精细的控制。借助 <code>steps()</code> 加/减速函数，您可以将时间轴拆分为多个定义的间隔（时长相同）。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-timing-function: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个参数是步数。如果关键帧数量与步数相同，那么每个关键帧都会按照其所在步长的精确时长依序播放，状态之间不会有过渡。 如果关键帧少于步数，浏览器会根据第二个参数在关键帧之间添加步。</p><p>第二个参数是方向。如果设为 <code>end</code>（默认值），则步骤会在时间轴的末尾完成。如果设置为 <code>start</code>，则动画的第一步会在开始时立即完成，这意味着它比 <code>end</code> 早一个步骤结束。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/JjEpege?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen JjEpege" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,11),v=i("h3",{id:"animation-iteration-count",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#animation-iteration-count"},[i("span",null,[i("code",null,"animation-iteration-count")])])],-1),f=a(`<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-iteration-count: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count" target="_blank" rel="noopener noreferrer">animate-iter-count</a> 属性定义 <code>@keyframes</code> 时间轴应在动画期间运行的次数。默认情况下，该值为 1，表示动画在到达时间轴末尾时停止。此值不能为负数。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/oNBEaYB?height=500&amp;theme-id=light&amp;default-tab=css%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen oNBEaYB" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,3),x=i("p",null,[e("如需让动画循环播放，请将迭代计数设置为 "),i("code",null,"infinite"),e("。这就是本课开头脉冲动画的运作方式。")],-1),F=i("iframe",{allow:"camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;",loading:"lazy",src:"https://codepen.io/web-dot-dev/embed/mdRXGeJ?height=500&theme-id=light&default-tab=css%2Cresult&editable=true","data-darkreader-inline-border-top":"","data-darkreader-inline-border-right":"","data-darkreader-inline-border-bottom":"","data-darkreader-inline-border-left":"","data-title":"Codepen 上 web-dot-dev 的 Pen mdRXGeJ",style:{"color-scheme":"initial","box-sizing":"inherit",border:"0px",height:"500px",width:"100%","--darkreader-inline-border-top":"0px","--darkreader-inline-border-right":"0px","--darkreader-inline-border-bottom":"0px","--darkreader-inline-border-left":"0px"}},null,-1),_=i("h3",{id:"animation-direction",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#animation-direction"},[i("span",null,[i("code",null,"animation-direction")])])],-1),w=a(`<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-direction: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以使用 <a href="https://developer.mozilla.org/docs/Web/CSS/animation-direction" target="_blank" rel="noopener noreferrer">Animation-direction</a> 设置时间轴在关键帧上的运行方向，其值如下：</p><ul><li><code>normal</code>：默认值，为正向。</li><li><code>reverse</code>：在时间轴上向后运行。</li><li><code>alternate</code>：对于每次动画迭代，时间轴都会在正向和反向运行之间交替。</li><li><code>alternate-reverse</code>：与 <code>alternate</code> 类似，但动画从时间轴向后移动。</li></ul><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/JjWPqMv?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen JjWPqMv" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,4),C=i("h3",{id:"animation-delay",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#animation-delay"},[i("span",null,[i("code",null,"animation-delay")])])],-1),S=a(`<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-delay: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://developer.mozilla.org/docs/Web/CSS/animation-delay" target="_blank" rel="noopener noreferrer">Animation-delay</a> 属性定义了浏览器在启动动画之前等待的时间。与 <code>animation-duration</code> 属性一样，此属性也采用时间值。</p><p>与 <code>animation-duration</code> 不同的是，您可以将 <code>animation-delay</code> 定义为负值，以便让动画从时间轴中的相应点开始。例如，如果动画时长为 10 秒，并且您将 <code>animation-delay</code> 设置为 <code>-5s</code>，则动画会从时间轴一半开始开始播放。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/bGqbyPw?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen bGqbyPw" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,4),z=i("h3",{id:"animation-play-state",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#animation-play-state"},[i("span",null,[i("code",null,"animation-play-state")])])],-1),D=a(`<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">:hover</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation-play-state: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">paused</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以使用 <a href="https://developer.mozilla.org/docs/Web/CSS/animation-play-state" target="_blank" rel="noopener noreferrer">Animation-play-state</a> 属性播放和暂停动画。默认值为 <code>running</code>。如果将其设置为 <code>paused</code>，动画会暂停。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/MWJQZyV?height=400&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="web-dot-dev 上的 Pen MWJQZyV" style="color-scheme:initial;box-sizing:inherit;border:0px;height:400px;width:854px;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,3),P=i("h3",{id:"animation-fill-mode",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#animation-fill-mode"},[i("span",null,[i("code",null,"animation-fill-mode")])])],-1),E=a('<p><a href="https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode" target="_blank" rel="noopener noreferrer">Animation-fill-mode</a> 属性会定义 <code>@keyframes</code> 时间轴中的哪些值在动画开始前或结束之后保持不变。默认值为 <code>none</code>，表示动画播放完毕后，时间轴中的值会被舍弃。其他选项包括： 100%</p><ul><li><code>forwards</code>：根据动画方向，最后一个关键帧持续显示。</li><li><code>backwards</code>：根据动画方向持续显示第一个关键帧。</li><li><code>both</code>：第一个和最后一个关键帧都会保留。</li></ul><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/rNyBEVK?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上的 web-dot-dev 的 Pen rNyBEVK" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>',3),J=a(`<h3 id="animation-简写" tabindex="-1"><a class="header-anchor" href="#animation-简写"><span><code>animation</code> 简写</span></a></h3><p>您可以采用 <code>animation</code> 简写形式来定义每个属性，而无需单独定义每个属性，这样一来，您就可以按以下顺序定义动画属性：</p><ol><li><code>animation-name</code></li><li><code>animation-duration</code></li><li><code>animation-timing-function</code></li><li><code>animation-delay</code></li><li><code>animation-iteration-count</code></li><li><code>animation-direction</code></li><li><code>animation-fill-mode</code></li><li><code>animation-play-state</code></li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.my-element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    animation: my-animation </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> ease-in-out</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> infinite</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> forwards</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> forwards</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> running</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用动画时的注意事项" tabindex="-1"><a class="header-anchor" href="#使用动画时的注意事项"><span>使用动画时的注意事项</span></a></h2><p>用户可以在与应用和网站互动时将其操作系统设置为首选减速模式。您可以使用 <a href="https://developer.mozilla.org/docs/Web/CSS/@media/prefers-reduced-motion" target="_blank" rel="noopener noreferrer">prefers-reduced-motion</a> 媒体查询来检测此偏好设置：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@media</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (prefers-reduced-motion) { </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    .my-autoplaying-animation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        animation-play-state: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">paused</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这不一定是没有动画的偏好。它倾向于使用较少的动画，尤其是较少的动画。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/bGqbPwq?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="由 web-dot-dev 在 Codepen 上通过 web-dot-dev 钢笔 bGqbPwq" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe>`,9);function W(N,G){const s=r("BrowseSurport");return l(),d("div",null,[k,n(s,{code:"css.at-rules.keyframes"}),m,e(" 尝试修改 `pulse` 规则，看看动画会如何变化。100% "),b,n(s,{code:"css.properties.animation"}),g,y,n(s,{code:"css.properties.animation-duration"}),u,n(s,{code:"css.properties.animation-timing-function"}),A,e(" 尝试更改动画使用的时间函数。 "),B,e(" 比较使用步骤和不使用步骤的动画 "),v,n(s,{code:"css.properties.animation-iteration-count"}),f,e(" 尝试更改此动画的迭代计数。 "),x,F,e(" 脉冲动画会无限循环播放。 "),_,n(s,{code:"css.properties.animation-direction"}),w,e(" 尝试更改动画方向。 "),C,n(s,{code:"css.properties.animation-delay"}),S,e(" 尝试更改动画延迟时间。 "),z,n(s,{code:"css.properties.animation-play-state"}),D,e(" 将光标悬停在动画元素上即可暂停动画。 "),P,n(s,{code:"css.properties.animation-fill-mode"}),E,e(" 尝试更改填充模式。 "),J])}const V=t(c,[["render",W],["__file","animations.html.vue"]]),Y=JSON.parse('{"path":"/web/css/animations.html","title":"动画","lang":"zh-CN","frontmatter":{"date":"2024-03-31T00:00:00.000Z","category":"css","tags":["animation"],"description":"动画 动画是突出互动元素的好方法，可为设计增添趣味和乐趣。在本单元中，您将了解如何使用 CSS 添加和控制动画效果。 有时，您会在界面上看到一些小帮助程序，这些程序会在您点击它们时提供有关其所在部分的实用信息。这类事件通常具有闪烁的动画，让您知道相关信息就在那里，并且应该与之互动。 此模块将介绍如何使用 CSS 创建这些帮助程序和其他动画。 闪烁的图标...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/css/animations.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"动画"}],["meta",{"property":"og:description","content":"动画 动画是突出互动元素的好方法，可为设计增添趣味和乐趣。在本单元中，您将了解如何使用 CSS 添加和控制动画效果。 有时，您会在界面上看到一些小帮助程序，这些程序会在您点击它们时提供有关其所在部分的实用信息。这类事件通常具有闪烁的动画，让您知道相关信息就在那里，并且应该与之互动。 此模块将介绍如何使用 CSS 创建这些帮助程序和其他动画。 闪烁的图标..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T10:18:51.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:tag","content":"animation"}],["meta",{"property":"article:published_time","content":"2024-03-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T10:18:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动画\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T10:18:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是关键帧？","slug":"什么是关键帧","link":"#什么是关键帧","children":[{"level":3,"title":"@keyframes","slug":"keyframes","link":"#keyframes","children":[]}]},{"level":2,"title":"animation 属性","slug":"animation-属性","link":"#animation-属性","children":[{"level":3,"title":"animation-duration","slug":"animation-duration","link":"#animation-duration","children":[]},{"level":3,"title":"animation-timing-function","slug":"animation-timing-function","link":"#animation-timing-function","children":[]},{"level":3,"title":"animation-iteration-count","slug":"animation-iteration-count","link":"#animation-iteration-count","children":[]},{"level":3,"title":"animation-direction","slug":"animation-direction","link":"#animation-direction","children":[]},{"level":3,"title":"animation-delay","slug":"animation-delay","link":"#animation-delay","children":[]},{"level":3,"title":"animation-play-state","slug":"animation-play-state","link":"#animation-play-state","children":[]},{"level":3,"title":"animation-fill-mode","slug":"animation-fill-mode","link":"#animation-fill-mode","children":[]},{"level":3,"title":"animation 简写","slug":"animation-简写","link":"#animation-简写","children":[]}]},{"level":2,"title":"使用动画时的注意事项","slug":"使用动画时的注意事项","link":"#使用动画时的注意事项","children":[]}],"git":{"createdTime":1724483645000,"updatedTime":1724494731000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":2}]},"readingTime":{"minutes":11.03,"words":3308},"filePathRelative":"web/css/animations.md","localizedDate":"2024年3月31日","excerpt":"\\n<p>动画是突出互动元素的好方法，可为设计增添趣味和乐趣。在本单元中，您将了解如何使用 CSS 添加和控制动画效果。</p>\\n<p>有时，您会在界面上看到一些小帮助程序，这些程序会在您点击它们时提供有关其所在部分的实用信息。这类事件通常具有闪烁的动画，让您知道相关信息就在那里，并且应该与之互动。 此模块将介绍如何使用 CSS 创建这些帮助程序和其他动画。</p>\\n<iframe allow=\\"camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;\\" loading=\\"lazy\\" src=\\"https://codepen.io/web-dot-dev/embed/mdRXGeJ?height=300&amp;theme-id=light&amp;default-tab=result&amp;editable=true\\" data-darkreader-inline-border-top=\\"\\" data-darkreader-inline-border-right=\\"\\" data-darkreader-inline-border-bottom=\\"\\" data-darkreader-inline-border-left=\\"\\" data-title=\\"Codepen 上 web-dot-dev 的 Pen mdRXGeJ\\" style=\\"color-scheme: initial; box-sizing: inherit; border: 0px; height: 300px; width: 100%; --darkreader-inline-border-top: 0px; --darkreader-inline-border-right: 0px; --darkreader-inline-border-bottom: 0px; --darkreader-inline-border-left: 0px;\\"></iframe>","autoDesc":true}');export{V as comp,Y as data};
