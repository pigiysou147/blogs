import{_ as e,c as i,o as r,b as a}from"./app-C58kMEDU.js";const t="/blogs/assets/a-diagram-the-four-main-0547c6c8ed138-B91DadBI.svg",d="/blogs/assets/three-photo-frames-610a106217f8d-BMN9jsYO.jpg",o={},l=a(`<h1 id="盒子模型" tabindex="-1"><a class="header-anchor" href="#盒子模型"><span>盒子模型</span></a></h1><p>假设您有这样一段 HTML：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;I am a paragraph of text that has a few words in it.&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后为其编写此 CSS：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    border: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> solid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>内容最终的宽度为 142 像素，而不是您指定的 100 像素，并且会脱离您的元素。这是为什么？</p><p>Box 模型是 CSS 的核心基础。了解框模型的工作原理、CSS 的其他方面对它的影响，重要的是了解如何控制该模型，有助于您编写更具预测性的 CSS。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/WNRemxN?height=300&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="由 web-dot-dev 在 Codepen 上撰写 WNRemxN" style="color-scheme:initial;box-sizing:inherit;border:0px;height:300px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p>了解 CSS 的框模型将帮助您找出内容无法容纳在元素内的原因。</p><p>请务必注意，CSS 显示的所有内容都是框，即使只是一些文本或具有使其看起来像圆形的 <code>border-radius</code>。</p><h2 id="内容和大小" tabindex="-1"><a class="header-anchor" href="#内容和大小"><span>内容和大小</span></a></h2><p>框根据其 <code>display</code> 值、设置的尺寸及其包含的内容具有不同的行为。这些内容可以是纯文本，也可以是由子元素生成的更多框。无论选择哪种方式，默认情况下，内容都会影响框的大小。</p><p>您可以使用<strong>外部尺寸调整</strong>来控制它，也可以使用<strong>固有尺寸</strong>让浏览器根据内容大小来为您决定。</p><p>下面的基本演示说明了它之间的区别：</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/abpoMBL?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上的 web-dot-dev 的 Pen abpoMBL" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p>如果包装盒有外侧尺寸，在超出开箱即用前，您可以添加的内容数量是有限制的。 这使得“很棒”这个词溢出来。</p><p>该演示在尺寸固定且带有粗边框的框中显示“CSS 太棒了”字样。由于框具有指定宽度，因此其大小可采用外部设置。这意味着，它可控制其子内容的尺寸。不过，“awesome”一词对于框来说过大，因此会溢出到父框的<strong>边框框</strong>之外（稍后会对此进行详细介绍）。防止出现此溢出的一种方法是，通过不设置宽度或在本例中将 <code>width</code> 设置为 <code>min-content</code>，让框本身可以调整大小。<code>min-content</code> 关键字指示框的宽度仅与其内容的最小固有宽度相同（即“awesome”一词）。这可以让框与文本完美契合。</p><p>下面是一个更复杂的示例，显示了不同尺寸对真实内容的影响：</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/wvgwOJV?height=650&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上的 web-dot-dev 的 Pen wvgwOJV" style="color-scheme:initial;box-sizing:inherit;border:0px;height:650px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p>通过外向尺寸，您可以控制元素的尺寸。固有大小可防止文本溢出。</p><p>开启和关闭固有尺寸，看看外侧尺寸如何为您提供更多控制，而外在尺寸和固有尺寸可赋予内容更多控制力。如要查看效果，请在卡片中添加几句文字。 如果此元素具有外部尺寸，则在溢出之前可以添加的内容数量存在限制，但当固有尺寸处于开启状态时，不会出现这种情况。</p><p>默认情况下，此元素都有一个 <code>width</code> 和 <code>height</code> 集，每个值均为 <code>400px</code>。这些尺寸对元素内的所有内容设定了严格的边界，除非内容过大，无法容纳方框。您可以通过将花朵图片下方的图片说明更改为超过该框高度的内容，来看看它的实际效果。</p><p>关键术语：如果内容太大，无法放入盒子，就会发生溢出。您可以使用 <code>overflow</code> 属性管理元素处理溢出内容的方式。</p><p>切换为固定尺寸后，浏览器会根据框的内容大小为您做出决定。这会使溢出的可能性大大降低，因为框会根据其内容调整大小。</p><p>请务必注意，固有大小是浏览器的默认行为，通常比外部大小提供更大的灵活性。</p><h2 id="盒子模型的面积" tabindex="-1"><a class="header-anchor" href="#盒子模型的面积"><span>盒子模型的面积</span></a></h2><p>方框由不同的方框模型区域组成，这些区域都执行特定工作。</p><p><img src="`+t+'" alt="显示框模型的四个主要区域（内容框、内边距框、边框和外边距框）的示意图" loading="lazy"> 框模型的四个主要区域：内容框、内边距框、边框和外边距框。</p><p><strong>内容框</strong>是内容所在的区域。内容可以控制其父级的大小，因此这通常是大小变化最大的区域。</p><p>内容框周围的<strong>内边距框</strong>是由 <a href="https://developer.mozilla.org/docs/Web/CSS/padding" target="_blank" rel="noopener noreferrer"><code>padding</code></a> 属性创建的空间。由于内边距在框内，因此框的背景在其创建的空间中可见。 如果该框设置了溢出规则（例如 <code>overflow: auto</code> 或 <code>overflow: scroll</code>），滚动条也会占用此空间。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/BaReoEV?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上的 web-dot-dev 的 Pen BaReoEV" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p>滚动条位于内边距框中。</p><p><strong>边框框</strong>环绕在内边距框周围，其空间由 <a href="https://developer.mozilla.org/docs/Web/CSS/border" target="_blank" rel="noopener noreferrer"><code>border</code></a> 值定义，而该值会为元素创建视觉框架。元素的<strong>边框边缘</strong>是您能看到的范围。</p><p>最后一个区域，即外边距框，它是框周围的空间，由框的 <code>margin</code> 规则定义。<a href="https://developer.mozilla.org/docs/Web/CSS/outline" target="_blank" rel="noopener noreferrer"><code>outline</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/CSS/box-shadow" target="_blank" rel="noopener noreferrer"><code>box-shadow</code></a> 等属性也会占用此空间，因为它们绘制在元素之上，不会影响框的大小。更改框的 <code>outline-width</code>（即 <code>200px</code>）不会改变边框边缘内的任何内容。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/XWprGea?height=500&amp;theme-id=light&amp;default-tab=result&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="由 web-dot-dev 在 Codepen 上发布的 Pen XWprGea" style="color-scheme:initial;box-sizing:inherit;border:0px;height:500px;width:100%;--darkreader-inline-border-top:0px;--darkreader-inline-border-right:0px;--darkreader-inline-border-bottom:0px;--darkreader-inline-border-left:0px;"></iframe><p>较宽的轮廓不会影响元素其余部分的大小。</p><h2 id="一个实用的类比" tabindex="-1"><a class="header-anchor" href="#一个实用的类比"><span>一个实用的类比</span></a></h2><p>框模型理解起来比较复杂，因此我们把到目前为止您所了解的内容打个比方。</p><p><img src="'+d+'" alt="三相框。" loading="lazy">使用实物相框绘制的盒子模型。</p><p>在此图中，您在墙上连续安装三个相框。加框图片的元素与框模型相对应，如下所示：</p><ul><li>内容框就是艺术作品。</li><li>内边距框是白色安装板，位于框架和艺术作品之间。</li><li>边框是用来为艺术作品提供文字边框的框架。</li><li>外边距框是指帧之间的间距。</li><li>阴影占用的空间与外边距框相同。</li></ul><h2 id="调试框模型" tabindex="-1"><a class="header-anchor" href="#调试框模型"><span>调试框模型</span></a></h2><p>浏览器开发者工具直观地呈现了选定框模型计算的结果，可帮助您了解框模型的工作原理及其对您正在访问的网站的影响。</p><p>请在您自己的浏览器中尝试此操作：</p><ol><li><a href="https://developer.chrome.com/docs/devtools/open" target="_blank" rel="noopener noreferrer">打开开发者工具</a>。</li><li><a href="https://developer.chrome.com/docs/devtools/css/reference#select" target="_blank" rel="noopener noreferrer">选择一个元素</a>。</li><li>显示方框模型调试程序。</li></ol><p><video controls="" style="box-sizing:inherit;border:0px;height:auto;max-width:100%;border-radius:var(--devsite-video-border-radius);display:block;margin-left:auto;margin-right:auto;"></video> 用于大纲演示的盒子模型调试程序。</p><h2 id="控制框模型" tabindex="-1"><a class="header-anchor" href="#控制框模型"><span>控制框模型</span></a></h2><p>如需了解如何控制框模型，您首先需要了解浏览器中的情况。</p><p>每个浏览器都会将用户代理样式表应用于 HTML 文档，以定义元素在未指定 CSS 时的外观和行为。用户代理样式表中的 CSS 因浏览器而异，但它们提供了合理的默认值，让内容更易于阅读。</p><p>用户代理样式表有一个属性，用于设置框的默认 <code>display</code>。例如，在普通流中，<code> 元素的默认 `display` 值为 `block`，</code> 的默认 <code>display</code> 值为 <code>list-item</code>，`` 的默认 <code>display</code> 值为 <code>inline</code>。</p><p><code>inline</code> 元素具有块外边距，但其他元素不遵循该外边距。使用 <code>inline-block</code> 时，其他元素会遵循块外边距，但第一个元素保留的大部分行为与其作为 <code>inline</code> 元素的行为相同。默认情况下，<code>block</code> 项会填充可用的<strong>内嵌空间</strong>，而 <code>inline</code> 和 <code>inline-block</code> 元素则与其内容大小相同。</p><p>用户代理样式表还设置了 <code>box-sizing</code>，以告知框如何计算其框大小。默认情况下，所有元素都具有以下用户代理样式：<code>box-sizing: content-box;</code>。这意味着，如果您设置了 <code>width</code> 和 <code>height</code> 等维度，这些维度会应用到<strong>内容框</strong>。如果您然后设置了 <code>padding</code> 和 <code>border</code>，这些值就会添加到内容框的大小中。</p><h2 id="资源" tabindex="-1"><a class="header-anchor" href="#资源"><span>资源</span></a></h2><ul><li><a href="https://developer.mozilla.org/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model" target="_blank" rel="noopener noreferrer">框模型简介</a></li><li><a href="https://developer.mozilla.org/docs/Learn/Common_questions/What_are_browser_developer_tools" target="_blank" rel="noopener noreferrer">什么是浏览器开发者工具？</a></li></ul><h3 id="用户代理样式表" tabindex="-1"><a class="header-anchor" href="#用户代理样式表"><span>用户代理样式表</span></a></h3><ul><li><a href="https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css" target="_blank" rel="noopener noreferrer">Chromium</a></li><li><a href="https://searchfox.org/mozilla-central/source/layout/style/res/html.css" target="_blank" rel="noopener noreferrer">Firefox</a></li><li><a href="https://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css" target="_blank" rel="noopener noreferrer">Webkit</a></li></ul>',56),s=[l];function n(p,h){return r(),i("div",null,s)}const g=e(o,[["render",n],["__file","box-model.html.vue"]]),b=JSON.parse('{"path":"/web/css/box-model.html","title":"盒子模型","lang":"zh-CN","frontmatter":{"date":"2024-03-31T00:00:00.000Z","category":"css","tags":["盒子模型"],"description":"盒子模型 假设您有这样一段 HTML： 然后为其编写此 CSS： 内容最终的宽度为 142 像素，而不是您指定的 100 像素，并且会脱离您的元素。这是为什么？ Box 模型是 CSS 的核心基础。了解框模型的工作原理、CSS 的其他方面对它的影响，重要的是了解如何控制该模型，有助于您编写更具预测性的 CSS。 了解 CSS 的框模型将帮助您找出内容无...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/css/box-model.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"盒子模型"}],["meta",{"property":"og:description","content":"盒子模型 假设您有这样一段 HTML： 然后为其编写此 CSS： 内容最终的宽度为 142 像素，而不是您指定的 100 像素，并且会脱离您的元素。这是为什么？ Box 模型是 CSS 的核心基础。了解框模型的工作原理、CSS 的其他方面对它的影响，重要的是了解如何控制该模型，有助于您编写更具预测性的 CSS。 了解 CSS 的框模型将帮助您找出内容无..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T07:14:05.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:tag","content":"盒子模型"}],["meta",{"property":"article:published_time","content":"2024-03-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T07:14:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"盒子模型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T07:14:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"内容和大小","slug":"内容和大小","link":"#内容和大小","children":[]},{"level":2,"title":"盒子模型的面积","slug":"盒子模型的面积","link":"#盒子模型的面积","children":[]},{"level":2,"title":"一个实用的类比","slug":"一个实用的类比","link":"#一个实用的类比","children":[]},{"level":2,"title":"调试框模型","slug":"调试框模型","link":"#调试框模型","children":[]},{"level":2,"title":"控制框模型","slug":"控制框模型","link":"#控制框模型","children":[]},{"level":2,"title":"资源","slug":"资源","link":"#资源","children":[{"level":3,"title":"用户代理样式表","slug":"用户代理样式表","link":"#用户代理样式表","children":[]}]}],"git":{"createdTime":1724483645000,"updatedTime":1724483645000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":1}]},"readingTime":{"minutes":8.42,"words":2526},"filePathRelative":"web/css/box-model.md","localizedDate":"2024年3月31日","excerpt":"\\n<p>假设您有这样一段 HTML：</p>\\n<div class=\\"language-html line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"html\\" data-title=\\"html\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">p</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;I am a paragraph of text that has a few words in it.&lt;/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">p</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{g as comp,b as data};
