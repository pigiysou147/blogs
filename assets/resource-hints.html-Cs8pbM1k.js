import{_ as i}from"./fig-1-DtEjvpED.js";import{_ as s,c as e,o as t,b as a}from"./app-BVIo3aAP.js";const n={},r=a('<h1 id="通过资源提示协助浏览器" tabindex="-1"><a class="header-anchor" href="#通过资源提示协助浏览器"><span>通过资源提示协助浏览器</span></a></h1><p>在关于<a href="/blogs/web/performance/optimize-resource-loading">优化资源加载</a>的上一单元中，您了解了各种网页资源（如 CSS 和 JavaScript）对网页加载速度的影响，以及如何优化这些资源及其投放速度以加快网页的呈现速度。现在正好可以进入更高级的资源加载方面，这涉及使用资源提示帮助浏览器更快地加载它们。</p><p>资源提示可以告知浏览器如何加载资源并确定资源优先级，从而帮助开发者进一步缩短网页加载时间。一组初始资源提示（例如 <code>preconnect</code> 和 <code>dns-prefetch</code>）是最先引入的资源提示。不过，随着时间的推移，<code>preload</code> 和 Fetch Priority API 相继提供了额外的功能。</p><p>资源提示会指示浏览器提前执行某些操作，这些操作可以提高加载性能。资源提示可以执行操作，例如执行早期 DNS 查找、提前连接到服务器，甚至在浏览器通常发现资源之前提取资源。</p><p>资源提示可以在 HTML 中指定（通常在 <code>&lt;head&gt;</code> 元素早期），也可以<a href="https://almanac.httparchive.org/en/2021/resource-hints#http-header" target="_blank" rel="noopener noreferrer">设置为 HTTP 标头</a>。本单元将介绍 <a href="https://www.w3.org/TR/resource-hints/#dfn-preconnect" target="_blank" rel="noopener noreferrer"><code>preconnect</code></a>、<a href="https://developer.mozilla.org/docs/Web/Performance/dns-prefetch" target="_blank" rel="noopener noreferrer"><code>dns-prefetch</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/HTML/Link_types/preload" target="_blank" rel="noopener noreferrer"><code>preload</code></a>，以及 <a href="https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/prefetch" target="_blank" rel="noopener noreferrer"><code>prefetch</code></a> 提供的推测性提取行为。</p><h2 id="preconnect" tabindex="-1"><a class="header-anchor" href="#preconnect"><span><code>preconnect</code></span></a></h2><p><code>preconnect</code> 提示用于与另一个来源（您要从其中提取关键资源）建立连接。例如，您可能在 CDN 或其他跨源上托管图片或资源：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preconnect&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://example.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 <code>preconnect</code> 即表示您预计浏览器计划在<em>不久的将来</em>连接到特定的跨源服务器，并且浏览器应尽快打开该连接，最好是在等待 HTML 解析器或预加载扫描程序执行此操作之前打开。</p><p>如果网页上有大量跨源资源，请对当前网页最至关重要的资源使用 <code>preconnect</code>。</p><p><img src="'+i+`" alt="Chrome 开发者工具网络面板中资源的连接时间屏幕截图。连接设置包括延迟时间、代理协商、DNS 查找、连接设置和 TLS 协商。" loading="lazy"> 在 Chrome 开发者工具的网络面板中显示的连接时间可视化图表。红色框中的时间是与跨源服务器建立连接时所涉及时间的时间，preconnect 可以尽早（而不是在发现跨源资源时）建立连接，从而缓解这种情况。</p><p><a href="https://almanac.httparchive.org/en/2021/resource-hints#fig-14" target="_blank" rel="noopener noreferrer"><code>preconnect</code> 的常见用例是 Google Fonts</a>。Google Fonts 建议您对提供 <code>@font-face</code> 声明的 <code>https://fonts.googleapis.com</code> 网域和提供字体文件的 <code>https://fonts.gstatic.com</code> 网域执行 <code>preconnect</code>。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preconnect&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://fonts.googleapis.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preconnect&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://fonts.gstatic.com&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> crossorigin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>crossorigin</code> 属性用于指示是否必须使用<a href="https://developer.mozilla.org/docs/Web/HTTP/CORS" target="_blank" rel="noopener noreferrer">跨域资源共享 (CORS)</a> 提取资源。使用 <code>preconnect</code> 提示时，如果从来源下载的资源使用 CORS（例如字体文件），则需要将 <code>crossorigin</code> 属性添加到 <code>preconnect</code> 提示中。</p><p><strong>注意</strong> ：如果您省略“crossorigin”属性，浏览器会在下载字体文件时打开新连接，并且不会重复使用通过“preconnect”提示打开的连接。## <code>dns-prefetch</code></p><p>虽然尽早打开与跨源服务器的连接可以显著缩短初始网页加载时间，但同时与多个跨源服务器建立连接可能不合理或不可行。如果您担心可能过度使用了 <code>preconnect</code>，可以使用 <code>dns-prefetch</code> 提示来使用开销大大降低的资源提示。</p><p>根据其名称，<code>dns-prefetch</code> 不会与跨源服务器建立连接，而只是提前为其执行 <a href="https://en.wikipedia.org/wiki/Domain_Name_System#Address_resolution_mechanism" target="_blank" rel="noopener noreferrer">DNS 查找</a>。在将域名解析为其底层 IP 地址时，会发生 <em>DNS 查询</em> 。虽然在设备和网络层级设置 DNS 缓存层有助于使此过程从总体上加快，但仍然需要一些时间。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;dns-prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://fonts.googleapis.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;dns-prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://fonts.gstatic.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>DNS 查找的费用相当低廉，并且由于费用相对较小，在某些情况下，它们可能比 <code>preconnect</code> 更适合。特别要指出的是，如果链接会转到您认为用户可能会访问的其他网站，那么使用这项资源提示可能是个不错的选择。<a href="https://github.com/malchata/dnstradamus" target="_blank" rel="noopener noreferrer">dnstradamus</a> 就是这样一种使用 JavaScript 自动执行此操作的工具，它使用 <a href="https://developer.mozilla.org/docs/Web/API/Intersection_Observer_API" target="_blank" rel="noopener noreferrer">Intersection Observer API</a> 在用户查看指向其他网站的链接时将 <code>dns-prefetch</code> 提示注入当前页面的 HTML 中。</p><h2 id="preload" tabindex="-1"><a class="header-anchor" href="#preload"><span><code>preload</code></span></a></h2><p><code>preload</code> 指令用于提前请求呈现网页所需的资源：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preload&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/lcp-image.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;image&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>preload</code> 指令应仅限于后期发现的关键资源。最常见的用例包括字体文件、通过 <code>@import</code> 声明提取的 CSS 文件，或可能是 <a href="https://web.dev/articles/lcp#what-elements-are-considered" target="_blank" rel="noopener noreferrer">Largest Contentful Paint (LCP) 候选对象</a>的 CSS <code>background-image</code> 资源。在这种情况下，预加载扫描器不会发现这些文件，因为相应资源是在外部资源中引用的。</p><p><strong>注意</strong> ：如果您使用 <code>preload</code> 下载由 <code>&lt;img&gt;</code> 元素指定的图片，该图片会根据用户视口的不同而有所不同，请务必将 <a href="https://web.dev/articles/preload-responsive-images" target="_blank" rel="noopener noreferrer"><code>imagesrcset</code> 属性添加到 <code>preload</code> 提示中，以下载适用于当前视口的正确图片</a>。您还应排除 <code>src</code> 属性，这样，不支持自适应预加载的浏览器就不会下载后备图片。 与 <code>preconnect</code> 类似，如果您要预加载 CORS 资源（例如字体），则 <code>preload</code> 指令也需要 <code>crossorigin</code> 属性。如果您未添加 <code>crossorigin</code> 属性（或者为非 CORS 请求添加该属性），则浏览器会下载两次资源，浪费带宽，本来可以本该花在其他资源上。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;preload&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/font.woff2&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;font&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> crossorigin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>重要提示</strong> ：如果 <code>preload</code> 指令的 <code>&lt;link&gt;</code> 元素中缺少 <code>as</code> 属性，该指令中指定的资源会下载两次。 如需查看 <code>as</code> 属性值列表，请参阅<a href="https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload#what_types_of_content_can_be_preloaded" target="_blank" rel="noopener noreferrer">关于 <code>as</code> 属性值的 MDN 文档</a>。在上述 HTML 代码段中，即使 <code>/font.woff2</code> 位于同一网域上，系统也会指示浏览器使用 CORS 请求预加载 <code>/font.woff2</code>。</p><p><strong>注意</strong> ：<code>preload</code> 指令是一项非常强大的性能优化，事实上可能会过度使用。使用 <code>preload</code> 指令下载的资源会以高优先级有效下载，如果过度使用，<code>preload</code> 可能会造成带宽争用，对网页加载速度产生负面影响。## <code>prefetch</code></p><p><strong>重要提示</strong> ：这是对 <code>prefetch</code> 资源提示的非常宽泛的说明。因此，本部分不会详细介绍使用该方法时应考虑的一些注意事项和权衡。本课程的后续单元将详细介绍<a href="/blogs/web/performance/prefetching-prerendering-precaching#prefetch_resources_needed_in_the_near_future_at_low_priority">如何以低优先级预提取近期所需的资源</a>，以及如何<a href="/blogs/web/performance/prefetching-prerendering-precaching#prefetch_pages_to_speed_up_future_navigations">预提取页面以加快日后的导航速度</a>。<code>prefetch</code> 指令用于针对可能会用于未来导航的资源发起低优先级请求：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prefetch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/next-page.css&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;style&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此指令基本上遵循与 <code>preload</code> 指令相同的格式，只有 <code>&lt;link&gt;</code> 元素的 <code>rel</code> 属性使用 <code>&quot;prefetch&quot;</code> 值。不过，与 <code>preload</code> 指令不同，<code>prefetch</code> 主要是推测性的，因为您将发起对资源的提取，以便将来的导航不一定会发生。</p><p>有时，<code>prefetch</code> 可以派上用场 - 例如，如果您在网站上确定了一个大多数用户需要完成的操作流程，那么为这些未来网页使用渲染关键资源的 <code>prefetch</code> 就有助于缩短用户的加载时间。</p><p><strong>注意</strong> ：鉴于 <code>prefetch</code> 的推测性，使用它的这一潜在缺点是，如果用户没有转到最终需要预提取资源的页面，那么用于提取资源的数据就可能不会被使用。请依靠您的分析或其他数据源了解您网站的使用模式，自行确定使用 <code>prefetch</code> 是否合适。或者，您也可以使用 <a href="https://web.dev/articles/optimizing-content-efficiency-save-data#detecting_the_save-data_setting" target="_blank" rel="noopener noreferrer"><code>Save-Data</code> 提示</a>，为已指定减少流量消耗偏好的用户选择停用预提取功能。## 提取优先级 API</p><p>您可以通过其 <code>fetchpriority</code> 属性使用 <a href="https://web.dev/articles/fetch-priority" target="_blank" rel="noopener noreferrer"><code>Fetch Priority API</code></a> 来提高资源的优先级。您可以将该属性与 <code>&lt;link&gt;</code>、<code>&lt;img&gt;</code> 和 <code>&lt;script&gt;</code> 元素一起使用。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;gallery&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;poster&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;img/poster-1.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fetchpriority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;high&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;thumbnails&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;img/thumbnail-2.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fetchpriority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;low&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;img/thumbnail-3.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fetchpriority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;low&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;img/thumbnail-4.jpg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fetchpriority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;low&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重要提示</strong> ：<code>fetchpriority</code> 属性在用于页面的 LCP 映像时<a href="https://web.dev/articles/fetch-priority#increase_the_priority_of_the_lcp_image" target="_blank" rel="noopener noreferrer">尤其有效</a>。通过使用此属性提高 LCP 图片的优先级，您可以相对轻松地改进网页的 LCP。默认情况下，系统会以较低的优先级提取图片。完成布局后，如果发现图片位于初始视口内，优先级将提升为 <strong>高</strong> 。在前面的 HTML 代码段中，<code>fetchpriority</code> 会立即告知浏览器以<strong>高</strong>优先级下载较大的 LCP 图片，而以较低的优先级下载不太重要的缩略图。</p><p>现代浏览器分两个阶段加载资源。第一阶段预留给关键资源，并在所有阻塞脚本下载和执行后结束。在此阶段，<strong>低</strong>优先级资源的下载可能会延迟。通过使用 <code>fetchpriority=&quot;high&quot;</code>，您可以提高资源的优先级，使浏览器能够在第一阶段下载资源。</p><h2 id="资源提示演示" tabindex="-1"><a class="header-anchor" href="#资源提示演示"><span>资源提示演示</span></a></h2><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi" loading="lazy" src="https://glitch.com/embed/#!/embed/learn-performance-resource-hints?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Glitch 上的 learn-performance-resource-hints"></iframe>`,38),h=[r];function l(p,o){return t(),e("div",null,h)}const c=s(n,[["render",l],["__file","resource-hints.html.vue"]]),g=JSON.parse('{"path":"/web/performance/resource-hints.html","title":"通过资源提示协助浏览器","lang":"zh-CN","frontmatter":{"date":"2023-02-01T00:00:00.000Z","category":"性能优化","description":"通过资源提示协助浏览器 在关于优化资源加载的上一单元中，您了解了各种网页资源（如 CSS 和 JavaScript）对网页加载速度的影响，以及如何优化这些资源及其投放速度以加快网页的呈现速度。现在正好可以进入更高级的资源加载方面，这涉及使用资源提示帮助浏览器更快地加载它们。 资源提示可以告知浏览器如何加载资源并确定资源优先级，从而帮助开发者进一步缩短网...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/performance/resource-hints.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"通过资源提示协助浏览器"}],["meta",{"property":"og:description","content":"通过资源提示协助浏览器 在关于优化资源加载的上一单元中，您了解了各种网页资源（如 CSS 和 JavaScript）对网页加载速度的影响，以及如何优化这些资源及其投放速度以加快网页的呈现速度。现在正好可以进入更高级的资源加载方面，这涉及使用资源提示帮助浏览器更快地加载它们。 资源提示可以告知浏览器如何加载资源并确定资源优先级，从而帮助开发者进一步缩短网..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T10:18:51.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:published_time","content":"2023-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T10:18:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通过资源提示协助浏览器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T10:18:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"preconnect","slug":"preconnect","link":"#preconnect","children":[]},{"level":2,"title":"preload","slug":"preload","link":"#preload","children":[]},{"level":2,"title":"资源提示演示","slug":"资源提示演示","link":"#资源提示演示","children":[]}],"git":{"createdTime":1724483645000,"updatedTime":1724494731000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":2}]},"readingTime":{"minutes":8.18,"words":2453},"filePathRelative":"web/performance/resource-hints.md","localizedDate":"2023年2月1日","excerpt":"\\n<p>在关于<a href=\\"/blogs/web/performance/optimize-resource-loading\\">优化资源加载</a>的上一单元中，您了解了各种网页资源（如 CSS 和 JavaScript）对网页加载速度的影响，以及如何优化这些资源及其投放速度以加快网页的呈现速度。现在正好可以进入更高级的资源加载方面，这涉及使用资源提示帮助浏览器更快地加载它们。</p>\\n<p>资源提示可以告知浏览器如何加载资源并确定资源优先级，从而帮助开发者进一步缩短网页加载时间。一组初始资源提示（例如 <code>preconnect</code> 和 <code>dns-prefetch</code>）是最先引入的资源提示。不过，随着时间的推移，<code>preload</code> 和 Fetch Priority API 相继提供了额外的功能。</p>","autoDesc":true}');export{c as comp,g as data};
