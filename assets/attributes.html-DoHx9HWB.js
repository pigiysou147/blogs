import{_ as i,c as s,o as e,d as a}from"./app-BFNMFIwh.js";const t="/blogs/assets/the-opening-tag-attribut-d49075bfc3ce2-DvlPaj7-.png",l={},n=a('<h1 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h1><p><a href="/web/html/overview#attributes" target="_blank" rel="noopener noreferrer">HTML 概述</a>中简要讨论了属性；现在，我们将进行深入探讨。</p><p>属性是让 HTML 如此强大的原因。属性是起始标记中显示的以空格分隔的名称和名称/值对，用于提供相应元素的相关信息和功能。</p><figure><img src="'+t+`" alt="用 HTML 元素标记的起始标记、属性和结束标记。" tabindex="0" loading="lazy"><figcaption>用 HTML 元素标记的起始标记、属性和结束标记。</figcaption></figure><p>属性定义了元素的行为、关联和功能。有些属性是全局属性，也就是说它们可以出现在任何元素的起始标记中。其他属性适用于多个元素（但并非全部），而其他属性则特定于元素，仅与单个元素相关。在 HTML 中，除布尔值之外的所有属性以及在某种程度上枚举属性都需要值。</p><p>如果属性值包含空格或特殊字符，则必须用引号括住该值。出于这个原因，也为了提高易读性，始终建议使用引号。</p><p>虽然 HTML 不区分大小写，但有些属性值区分大小写。属于 HTML 规范的值不区分大小写。 定义的字符串值（例如类和 ID 名称）区分大小写。如果属性值在 HTML 中区分大小写，那么在 CSS 和 JavaScript 中用作<a href="https://developer.mozilla.org/docs/Web/CSS/Attribute_selectors" target="_blank" rel="noopener noreferrer">属性选择器</a>的一部分时则区分大小写；在其他情况下则不区分大小写。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&lt;!--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> the</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> attribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> is case insensitive: these are equivalent --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">inputtype</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">inputtype</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;TeXt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;!-- </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">the</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> id</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> attribute</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> is</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> case</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> sensitive</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> they</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> are</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> not</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> equivalent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">divid</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;myId&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">divid</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MyID&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="布尔值属性" tabindex="-1"><a class="header-anchor" href="#布尔值属性"><span>布尔值属性</span></a></h2><p>如果存在布尔值属性，则该属性始终为 true。布尔值属性包括 <code>autofocus</code>、<code>inert</code>、<code>checked</code>、<code>disabled</code>、<code>required</code>、<code>reversed</code>、<code>allowfullscreen</code>、<code>default,</code> <code>loop</code>、<code>autoplay</code>、<code>controls</code>、<code>muted</code>、<code>readonly</code>、<code>multiple,</code> 和 <code>selected</code>。如果存在其中一个或多个属性，则该元素会被停用、必需、只读等。如果不存在，则不存在。</p><p>布尔值可以省略、设为空字符串或者设为属性名称；但值实际上并非必须设为字符串 <code>true</code>。包括 <code>true</code>、<code>false</code> 和 <code>😀</code> 等的所有无效值都将解析为 true。</p><p>以下三个标记是等效的：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">inputrequired</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;inputrequired=&quot;&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;inputrequired=&quot;required&quot;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果属性值为 false，请省略该属性。如果该属性为 true，请包含该属性，但不提供值。 例如，<code>required=&quot;required&quot;</code> 在 HTML 中不是有效值；但由于 <code>required</code> 是布尔值，因此无效值会解析为 true。 但是，由于无效的枚举属性不一定解析为与缺失值相同的值，因此，相对于记住哪些属性是布尔值和枚举属性，并且可能会提供无效值，更容易养成省略值的习惯。</p><p>在 true 和 false 之间切换时，请使用 JavaScript 完全添加和移除属性，而不是切换值。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> myMedia</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;mediaFile&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">myMedia</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">removeAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;muted&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">myMedia</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;muted&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，在 XML 语言（例如 SVG）中，所有属性（包括布尔属性）都需要包含一个值。</p><h2 id="枚举属性" tabindex="-1"><a class="header-anchor" href="#枚举属性"><span>枚举属性</span></a></h2><p>枚举属性有时会与布尔值属性相混淆。它们属于 HTML 属性，具有一组有限的预定义有效值。与布尔值属性一样，如果属性存在但缺少值，则它们具有默认值。例如，如果您添加 <code>&lt;style contenteditable&gt;</code>，则默认为 <code>&lt;style contenteditable=&quot;true&quot;&gt;</code>。</p><p>不过，与布尔值属性不同的是，省略该属性并不意味着该属性为 false；具有缺失值的当前属性并不一定为 true；无效值的默认值也不一定与 null 字符串相同。继续以此示例为例，如果 <code>contenteditable</code> 缺失或无效，则默认为 <code>inherit</code>，并且可以明确设置为 <code>false</code>。</p><p>默认值取决于属性。与布尔值不同，属性如果存在，不会自动为“true”。如果您添加了 <code>&lt;style contenteditable=&quot;false&quot;&gt;</code>，则元素无法修改。如果值无效（例如 <code>&lt;style contenteditable=&quot;😀&quot;&gt;</code>）或出人意料的 <code>&lt;style contenteditable=&quot;contenteditable&quot;&gt;</code>，则该值无效，默认为 <code>inherit</code>。</p><p>在大多数情况下，使用枚举属性时，缺失值和无效值是相同的。例如，如果 <code>&lt;input&gt;</code> 上的 <code>type</code> 属性缺失、存在但不含值或包含无效值，则默认为 <code>text</code>。虽然这种行为很常见，但并不常见。 因此，请务必了解哪些属性是布尔值属性，哪些属性为枚举值；如果可能的话，请省略值，以免弄错，并根据需要查找值。</p><h2 id="全局属性" tabindex="-1"><a class="header-anchor" href="#全局属性"><span>全局属性</span></a></h2><p>全局属性是指可在任何 HTML 元素上设置的属性，包括 <code>&lt;head&gt;</code> 中的元素。全局属性数量超过 <a href="https://developer.mozilla.org/docs/Web/HTML/Global_attributes#list_of_global_attributes" target="_blank" rel="noopener noreferrer">30 个</a>。虽然从理论上讲，所有这些都可以添加到任何 HTML 元素中，但某些全局属性在对某些元素进行设置时不会产生任何影响；例如，在 <code>&lt;meta&gt;</code> 上设置 <code>hidden</code> 时不会显示元内容。</p><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span><code>id</code></span></a></h3><p>全局属性 <code>id</code> 用于定义元素的唯一标识符。它有多种用途，包括： - 链接的片段标识符的目标。 - 识别用于编写脚本的元素。 - 将表单元素与其标签相关联。 - 为辅助技术提供标签或说明。 - 在 CSS 中以（高特异性或作为属性选择器）定位样式。</p><p><code>id</code> 值是一个不含空格的字符串。如果包含空格，文档不会中断，但您必须使用 HTML、CSS 和 JS 中的转义字符来定位 <code>id</code>。所有其他字符均有效。<code>id</code> 值可以是 <code>😀</code> 或 <code>.class</code>，但不建议这样做。为了简化当前和未来的编程，请将 <code>id</code> 的第一个字符设为字母，并仅使用 ASCII 字母、数字、<code>_</code> 和 <code>-</code>。最好先制定一个 <code>id</code> 命名惯例，然后严格遵循该惯例，因为 <code>id</code> 值区分大小写。</p><p><code>id</code> 应该是文档中唯一的。如果 <code>id</code> 多次使用，网页的布局可能不会中断，但 JavaScript、链接和元素互动可能不会按预期运行。</p><h4 id="链接片段标识符" tabindex="-1"><a class="header-anchor" href="#链接片段标识符"><span>链接片段标识符</span></a></h4><p>导航栏包含四个链接。我们稍后将介绍链接元素，但目前要认识到，链接并不仅限于基于 HTTP 的网址，它们可以是当前文档（或其他文档中）的网页部分的片段标识符。</p><p>在机器学习研讨会网站上，页眉中的导航栏包含四个链接：</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/GRGzbXR?height=300&amp;theme-id=dark&amp;default-tab=html%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="由 web-dot-dev 在 Codepen 上开发的 Pen GRGzbXR"></iframe><p>href 属性提供激活链接后用户会转到的超链接。如果网址包含井号 (<code>#</code>)，后跟一串字符，该字符串就是片段标识符。如果该字符串与网页中某个元素的 <code>id</code> 匹配，该 fragment 就是该元素的锚标记或书签。浏览器将滚动到定义锚点的位置。</p><p>这四个链接指向我们网页中使用 <code>id</code> 属性标识的四个版块。当用户点击导航栏中的四个链接中的任何一个时，由 fragment 标识符关联的元素（包含匹配 ID 减去 <code>#</code> 的元素）将滚动到视野范围内。</p><p>机器学习研讨会的 <code>&lt;main&gt;</code> 内容分为四个带有 ID 的部分。当网站访问者点击 <code>&lt;nav&gt;</code> 中的其中一个链接时，具有该 fragment 标识符的部分会滚动到视野范围内。标记类似于以下内容：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;reg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Machine Learning Workshop Tickets&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;about&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;What you&#39;ll learn&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;teachers&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Your Instructors&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Hal 9000 &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">&amp;amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; EVE&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;feedback&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;What it&#39;s like to learn good and do other stuff good too&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比较 <code>&lt;nav&gt;</code> 链接中的 fragment 标识符，您会注意到，每个标识符都与 <code>&lt;main&gt;</code> 中 <code>&lt;section&gt;</code> 的 <code>id</code> 匹配。浏览器为我们提供了免费的“页首”链接。设置 <code>href=&quot;#top&quot;</code>（不区分大小写或仅设置 <code>href=&quot;#&quot;</code>）会将用户滚动到页面顶部。</p><p><code>href</code> 中的哈希标记分隔符不是片段标识符的一部分。片段标识符始终是网址的最后一部分，不会发送到服务器。</p><h4 id="css-选择器" tabindex="-1"><a class="header-anchor" href="#css-选择器"><span>CSS 选择器</span></a></h4><p>在 CSS 中，您可以使用 ID 选择器（如 <code>#feedback</code>）来定位每个版块，或者使用区分大小写的<a href="/web/css/selectors#attribute_selector" target="_blank" rel="noopener noreferrer">属性选择器</a> <code>[id=&quot;feedback&quot;]</code>（为降低<a href="https://developer.mozilla.org/docs/Web/CSS/Specificity" target="_blank" rel="noopener noreferrer">特异性</a>）。</p><h4 id="设计脚本" tabindex="-1"><a class="header-anchor" href="#设计脚本"><span>设计脚本</span></a></h4><p>MLW.com 上有只鼠标用户的复活节彩蛋功能。点击灯开关即可打开和关闭网页。</p><p>灯光开关图片的标记如下： <code>html &lt;img src=&quot;svg/switch2.svg&quot; id=&quot;switch&quot; alt=&quot;light switch&quot; class=&quot;light&quot; /&gt;</code> <code>id</code> 属性可用作 <a href="https://developer.mozilla.org/docs/Web/API/Document/getElementById" target="_blank" rel="noopener noreferrer"><code>getElementById()</code></a> 方法的参数，且带有 <code>#</code> 前缀，可用作 <a href="https://developer.mozilla.org/docs/Web/API/Document/querySelector" target="_blank" rel="noopener noreferrer"><code>querySelector()</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Document/querySelectorall" target="_blank" rel="noopener noreferrer"><code>querySelectorAll()</code></a> 方法参数的一部分。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> switchViaID</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;switch&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> switchViaSelector</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">querySelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;#switch&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们的一个 JavaScript 函数就是利用这种功能按元素的 <code>id</code> 属性定位元素的：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  /* switch is a reserved word in js, so we us onoff instead */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  const onoff = document.getElementById(&#39;switch&#39;);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  onoff.addEventListener(&#39;click&#39;,function()</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">classList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toggle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;black&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">  }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="label" tabindex="-1"><a class="header-anchor" href="#label"><span><code>&lt;label&gt;</code></span></a></h4><p><a href="https://developer.mozilla.org/docs/Web/HTML/Element/label" target="_blank" rel="noopener noreferrer">HTML <code>&lt;label&gt;</code> 元素</a>有一个 <code>for</code> 属性，该属性将与其相关联的表单控件的 <code>id</code> 作为其值。通过在每个表单控件上添加 <code>id</code> 并将每个表单控件与标签的 <code>for</code> 属性配对来创建显式标签，可确保每个表单控件都有一个关联的标签。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/JjZxQOB?height=300&amp;theme-id=dark&amp;default-tab=html%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="由 web-dot-dev 在 Codepen 上发布的 Pen JjZxQOB"></iframe><p>虽然每个标签只能与一个表单控件相关联，但一个表单控件可以有多个关联标签。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/dyKaBda?height=300&amp;theme-id=dark&amp;default-tab=html%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen dyKaBda"></iframe><p>如果表单控件嵌套在 <code>&lt;label&gt;</code> 起始标记和结束标记之间，则无需使用 <code>for</code> 和 <code>id</code> 属性：这称为“隐式”标签。通过标签，所有用户均可了解每个表单控件的用途。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  Send me a reminder &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;number&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;min&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; before the workshop resumes</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>for</code> 与 <code>id</code> 之间的关联性可让使用辅助技术的用户获取相关信息。此外，点击标签的任意位置会将焦点转到关联的元素，从而扩展控件的点击区域。这不仅对因灵敏性问题而导致鼠标操作不准确的用户有助益，而且还有助于每位移动设备用户用手指宽于单选按钮，</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/BaVMgxo?height=300&amp;theme-id=dark&amp;default-tab=html%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen BaVMgxo"></iframe><p>在此代码示例中，虚构测验的第五个虚假问题是单选题。每个表单控件都有明确的标签，且每个标签具有唯一的 <code>id</code>。为了确保我们不会意外地重复 ID，ID 值应由问题编号和问题值组成。</p><p>添加单选按钮时，由于标签会描述单选按钮的值，因此我们会在 <code>&lt;fieldset&gt;</code> 中包含所有同名的按钮，其中 <code>&lt;legend&gt;</code> 是整个组的标签或问题。</p><h4 id="其他无障碍用途" tabindex="-1"><a class="header-anchor" href="#其他无障碍用途"><span>其他无障碍用途</span></a></h4><p>在无障碍功能和易用性上使用<code>id</code>不仅限于标签。在<a href="/web/html/text-basics" target="_blank" rel="noopener noreferrer">文字简介</a>中，通过将 <code>&lt;h2&gt;</code> 的 <code>id</code> 引用为 <code>&lt;section&gt;</code> 的 <code>aria-labelledby</code> 的值以提供无障碍名称，将 <code>&lt;section&gt;</code> 转换为区域地标：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">section</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;about&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> aria-label</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ledby</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;about_heading&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;about_heading&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;What you&#39;ll learn&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>可用于确保可访问性的 <code>aria-*</code> 状态和属性超过 50 种。<a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby" target="_blank" rel="noopener noreferrer"><code>aria-labelledby</code></a>、<a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Attributes/aria-describedby" target="_blank" rel="noopener noreferrer"><code>aria-describedby</code></a>、<a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Attributes/aria-details" target="_blank" rel="noopener noreferrer"><code>aria-details</code></a> 和 <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Attributes/aria-owns" target="_blank" rel="noopener noreferrer"><code>aria-owns</code></a> 将一个以空格分隔的 <code>id</code> 引用列表作为它们的值。<a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Attributes/aria-activedescendant" target="_blank" rel="noopener noreferrer"><code>aria-activedescendant</code></a> 用于标识当前获得焦点的后代元素，将单个 <code>id</code> 引用作为其值，即具有焦点的单个元素的引用（一次只能聚焦一个元素）。</p><p>**注意 ** ：使用 <code>aria-labelledby</code>，您可以创建从表单控件到多个标签的反向关联，包括未嵌套在 <code>&lt;label&gt;</code> 中的文本，无论文本是否标记了多个表单控件。如果控件同时具有 <code>&lt;label&gt;</code> 和 <code>aria-labelledby</code>，则以 <code>aria-labelledby</code> 为准；除非 <code>aria-labelledby</code> 包含标签的 ID，否则用户将不会听到 <code>&lt;label&gt;</code> 文本。### <code>class</code></p><p><code>class</code> 属性提供了一种使用 CSS（和 JavaScript）定位元素的额外方法，但在 HTML 中它没有其他用途（尽管框架和组件库可能会使用它们）。类属性接受以空格分隔的元素类（区分大小写）的列表，作为其值。</p><p>**注意 ** ：您可以使用 CSS 选择器和 DOM 方法根据元素名称、属性、属性值、在 DOM 树中的位置等来选择元素。语义 HTML 提供了有意义的钩子，因此通常不需要添加类名称。添加类名称、使用 <a href="https://developer.mozilla.org/docs/Web/API/Document/getElementsByClassName" target="_blank" rel="noopener noreferrer"><code>document.getElementsByClassName()</code></a> 与根据属性和页面结构定位元素（使用更可靠的 document.querySelectorAll()）之间的独特区别在于：前者会返回活跃节点列表，后者是静态的。构建合理的语义结构后，我们就可以根据元素的位置和功能来定位元素。声音结构支持使用后代元素选择器、关系选择器和属性选择器。在了解本部分的属性时，请考虑如何为具有相同属性或属性值的元素设置样式。这并不是您不应使用类属性，只是大多数开发者没有意识到它们通常不需要。</p><p>到目前为止，MLW 尚未使用任何类。一个网站能否在没有单个类名称的情况下启动？等着瞧。</p><h3 id="style" tabindex="-1"><a class="header-anchor" href="#style"><span><code>style</code></span></a></h3><p>借助 <code>style</code> 属性，您可以应用内嵌样式，即应用于设置了该属性的单个元素的样式。 <code>style</code> 属性以 CSS 属性值对作为其值，并且值的语法与 CSS 样式块的内容相同：属性后跟英文冒号，就像在 CSS 中一样，并且英文分号作为每个声明的结尾，在值之后。</p><p>样式仅应用于设置了该属性的元素，如果嵌套元素或 <code>&lt;style&gt;</code> 块或样式表中的其他样式声明未覆盖，后代会继承继承的属性值。由于该值相当于仅应用于相应元素的单个样式块的内容，因此不能用于生成的内容、制作关键帧动画或应用任何其他 @ 规则。</p><p>虽然 <code>style</code> 确实是全局属性，但不建议使用它。而应在单独的文件或文件中定义样式。 也就是说，<code>style</code> 属性在开发过程中可以派上用场，以便实现快速样式设置，例如用于测试目的。然后，选择“solution”样式并将其粘贴在关联的 <a href="/web/css" target="_blank" rel="noopener noreferrer">CSS</a> 文件中。</p><h3 id="tabindex" tabindex="-1"><a class="header-anchor" href="#tabindex"><span><code>tabindex</code></span></a></h3><p>您可以向任何元素添加 <code>tabindex</code> 属性，以使该元素能够获得焦点。<code>tabindex</code> 值用于指定是否将其添加到 Tab 键顺序中，以及（可选）添加到非默认 Tab 键顺序中。</p><p><code>tabindex</code> 属性接受整数值。负值（惯例是使用 <code>-1</code>）使元素能够获得焦点（例如通过 JavaScript），但不会将该元素添加到 Tab 键序列中。如果 <code>tabindex</code> 值为 <code>0</code>，元素可聚焦并可通过 Tab 键访问，同时按源代码顺序添加到网页的默认 Tab 键顺序中。如果值等于或大于 <code>1</code>，则系统会将相应元素置于优先对焦序列，因此不建议使用。</p><p>此页面提供了一项使用 <code>&lt;share-action&gt;</code> 自定义元素充当 <code>&lt;button&gt;</code> 的分享功能。包含了零的 <code>tabindex</code>，用于将自定义元素添加到键盘的默认 Tab 键顺序中：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">share-action</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> authors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;@estellevw&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;click&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-category</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;web.dev&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;share&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;share, twitter&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;button&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> tabindex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">svg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> aria-label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;share&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;img&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2000/svg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">use</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;#shareIcon&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">svg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Share&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">share-action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/button_role" target="_blank" rel="noopener noreferrer"><code>button</code> 的 <code>role</code></a> 用于告知屏幕阅读器用户，此元素的行为应类似于按钮。JavaScript 用于确保按钮功能承诺得到遵守，包括处理 <a href="https://developer.mozilla.org/docs/Web/API/Element/click_event" target="_blank" rel="noopener noreferrer">click</a> 和 <a href="https://developer.mozilla.org/docs/Web/API/Element/keydown_event" target="_blank" rel="noopener noreferrer">keydown</a> 事件，以及处理 Enter 键和空格键的按键操作。</p><p>表单控件、链接、按钮和<a href="/web/html/attributes#contenteditable" target="_blank" rel="noopener noreferrer">内容可修改</a>元素能够获得焦点；当键盘用户点击 Tab 键时，焦点会移到下一个可聚焦元素，就好像它们已设置 <code>tabindex=&quot;0&quot;</code> 一样。默认情况下，其他元素不可聚焦。为这些元素添加 <code>tabindex</code> 属性可让这些元素在其他情况下无法获得焦点。</p><p>如果文档包含的 <code>tabindex</code> 为 <code>1</code> 或更高的元素，这些元素会包含在单独的标签页序列中。正如您在代码笔中看到的，按 Tab 键从低到高的顺序从单独的序列开始，然后再按源顺序按常规序列进行选择。</p><iframe allow="camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi;" loading="lazy" src="https://codepen.io/web-dot-dev/embed/ExRGBPE?height=300&amp;theme-id=light&amp;default-tab=html%2Cresult&amp;editable=true" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-title="Codepen 上 web-dot-dev 的 Pen ExRGBPE"></iframe><p>改变 Tab 键顺序可能会造成非常糟糕的用户体验。使用户很难依靠键盘和屏幕阅读器等辅助技术来浏览内容。对开发者来说，管理和维护难度也很大。焦点很重要；整个单元中讨论焦点和焦点顺序。</p><h3 id="role" tabindex="-1"><a class="header-anchor" href="#role"><span><code>role</code></span></a></h3><p><a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles" target="_blank" rel="noopener noreferrer"><code>role</code> 属性</a>是 <a href="https://w3c.github.io/aria/#introroles" target="_blank" rel="noopener noreferrer">ARIA 规范</a>（而非 <a href="https://html.spec.whatwg.org/#global-attributes:attr-aria-role" target="_blank" rel="noopener noreferrer">WHATWG HMTL 规范</a>）的一部分。<code>role</code> 属性可用于提供内容的语义含义，以便屏幕阅读器将对象的预期用户互动告知网站用户。</p><p>有一些常见的界面 widget（如<a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/combobox_role" target="_blank" rel="noopener noreferrer">组合框</a>、<a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/menubar_role" target="_blank" rel="noopener noreferrer">菜单栏</a>、<a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/tablist_role" target="_blank" rel="noopener noreferrer">标签页列表</a>和 <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/treegrid_role" target="_blank" rel="noopener noreferrer">treegrids</a>）没有等效的原生 HTML 代码。例如，创建标签页式设计模式时，可以使用 <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/tab_role" target="_blank" rel="noopener noreferrer"><code>tab</code></a>、<code>tablist</code> 和 <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles/tabpanel_role" target="_blank" rel="noopener noreferrer"><code>tabpanel</code></a> 角色。能看到界面的人已经通过经验教会了如何通过点击关联的标签页来导航 widget 和显示不同的面板。当使用一组按钮显示不同的面板时，将 <code>tab</code> 角色与 <code>&lt;button role=&quot;tab&quot;&gt;</code> 包含在其中，可让屏幕阅读器用户知道当前具有焦点的 <code>&lt;button&gt;</code> 可以将相关面板切换到视图，而不是实现类似于按钮的典型功能。</p><p><code>role</code> 属性不会更改浏览器行为，也不会改变键盘或指针设备的交互 - 向 <code>&lt;span&gt;</code> 添加 <code>role=&quot;button&quot;</code> 不会使其变为 <code>&lt;button&gt;</code>。因此，我们建议您将语义 HTML 元素用于预期用途。但是，当无法使用正确的元素时，<code>role</code> 属性可让您在非语义元素已调整为语义元素的角色时通知屏幕阅读器用户。</p><h3 id="contenteditable" tabindex="-1"><a class="header-anchor" href="#contenteditable"><span><code>contenteditable</code></span></a></h3><p>将 <code>contenteditable</code> 属性设置为 <code>true</code> 的元素可修改、可聚焦，并可添加到 Tab 键顺序中，就如同设置了 <code>tabindex=&quot;0&quot;</code>。<code>Contenteditable</code> 是支持值 <code>true</code> 和 <code>false</code> 的枚举属性，如果属性不存在或具有无效值，则默认值为 <code>inherit</code>。</p><p>以下三个起始标记是等效的：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> contenteditable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> contenteditable=&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> contenteditable=&quot;true&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您添加了 <code>&lt;style contenteditable=&quot;false&quot;&gt;</code>，则元素不可修改（除非默认情况下可修改，例如 <code>&lt;textarea&gt;</code>）。如果值无效（例如 <code>&lt;style contenteditable=&quot;😀&quot;&gt;</code> 或 <code>&lt;style contenteditable=&quot;contenteditable&quot;&gt;</code>），则值默认为 <code>inherit</code>。</p><p>若要切换状态，请查询 <a href="https://developer.mozilla.org/docs/Web/API/HTMLElement/contentEditable" target="_blank" rel="noopener noreferrer">HTMLElement.isContentEditable</a> 只读属性的值。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> editor</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;myElement&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">editor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">contentEditable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  editor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;contenteditable&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  editor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;contenteditable&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者，您也可以通过将 <code>editor.contentEditable</code> 设置为 <code>true</code>、<code>false</code> 或 <code>inherit</code> 来指定此属性。</p><p>全局属性可应用于所有元素，甚至是 <code>&lt;style&gt;</code> 元素。您可以使用属性和少量 CSS 来创建实时 CSS 编辑器。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> contenteditable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color:</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">inherit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  display:</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">block</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> solid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  font:</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">inherit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  font-family: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">monospace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">em</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border-radius:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">em</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  white-space: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">pre</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>尝试将 <code>style</code> 的 <code>color</code> 更改为 <code>inherit</code> 以外的值。然后，尝试将 <code>style</code> 更改为 <code>p</code> 选择器。请勿移除 display 属性，否则样式块会消失。</p><h2 id="自定义特性" tabindex="-1"><a class="header-anchor" href="#自定义特性"><span>自定义特性</span></a></h2><p>我们现在仅涉及 HTML 全局属性的表面。还有更多属性仅适用于一个或一组有限的元素。即使有数百个已定义的属性，您也可能需要一个规范中没有的属性。HTML 助您一臂之力。</p><p>您可以通过添加 <a href="https://developer.mozilla.org/docs/Web/HTML/Global_attributes/data-*" target="_blank" rel="noopener noreferrer"><code>data-</code></a> 前缀来创建任何所需的自定义属性。您可以为属性命名，名称以 <code>data-</code> 开头，后跟一组不以 <code>xml</code> 开头且不包含英文冒号 (<code>:</code>) 的小写字符。</p><p>如果您创建不以 <code>data</code> 开头的不受支持的属性，或者即使自定义属性以 <code>xml</code> 开头或包含 <code>:</code>，则 HTML 不会出错，但创建以 <code>data-</code> 开头的有效自定义属性会带来很多好处。有了自定义数据属性，您便不会意外地使用现有的属性名称。自定义数据属性可满足未来需求。</p><p>虽然浏览器不会为任何带有 <code>data-</code> 前缀的特定属性实现默认行为，但内置了数据集 API 可以遍历您的自定义属性。自定义属性是通过 JavaScript 传达应用特定信息的绝佳方式。以 <code>data-name</code> 的形式向元素添加自定义属性，并对相关元素使用 <code>dataset[name]</code> 通过 DOM 访问这些属性。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">blockquote</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-machine-learning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;workshop&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  data-first-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Blendan&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">data-last-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Smooth&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  data-formerly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Margarita Maker&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">data-aspiring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Load Balancer&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  data-year-graduated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2022&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  HAL and EVE could teach a fan to blow hot air.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">blockquote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以使用完整属性名称的 <code>getAttribute()</code>，也可以利用更简单的 <a href="https://developer.mozilla.org/docs/Web/API/HTMLElement/dataset" target="_blank" rel="noopener noreferrer"><code>dataset</code></a> 属性。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dataset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;machineLearning&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// workshop</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">dataset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">machineLearning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// workshop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>dataset</code> 属性会返回每个元素的 <code>data-</code> 属性的 <code>DOMStringMap</code> 对象。<code>&lt;blockquote&gt;</code> 上有多个自定义属性。数据集属性意味着您无需知道这些自定义属性即可访问其名称和值：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> key</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dataset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  customObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dataset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本文中的属性是全局属性，这意味着它们可以应用于任何 HTML 元素（尽管它们并不都对这些元素产生影响）。接下来，我们会分析简介图片中未涉及的两个属性（<code>target</code> 和 <code>href</code>），以及几个其他特定于元素的属性，以深入了解链接。</p>`,105),h=[n];function d(r,p){return e(),s("div",null,h)}const o=i(l,[["render",d],["__file","attributes.html.vue"]]),c=JSON.parse('{"path":"/web/html/attributes.html","title":"属性","lang":"zh-CN","frontmatter":{"date":"2024-03-31T00:00:00.000Z","category":"html","tag":["属性"],"description":"属性 HTML 概述中简要讨论了属性；现在，我们将进行深入探讨。 属性是让 HTML 如此强大的原因。属性是起始标记中显示的以空格分隔的名称和名称/值对，用于提供相应元素的相关信息和功能。 用 HTML 元素标记的起始标记、属性和结束标记。用 HTML 元素标记的起始标记、属性和结束标记。 属性定义了元素的行为、关联和功能。有些属性是全局属性，也就是说...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/html/attributes.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"属性"}],["meta",{"property":"og:description","content":"属性 HTML 概述中简要讨论了属性；现在，我们将进行深入探讨。 属性是让 HTML 如此强大的原因。属性是起始标记中显示的以空格分隔的名称和名称/值对，用于提供相应元素的相关信息和功能。 用 HTML 元素标记的起始标记、属性和结束标记。用 HTML 元素标记的起始标记、属性和结束标记。 属性定义了元素的行为、关联和功能。有些属性是全局属性，也就是说..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T07:14:05.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:tag","content":"属性"}],["meta",{"property":"article:published_time","content":"2024-03-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T07:14:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"属性\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T07:14:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"布尔值属性","slug":"布尔值属性","link":"#布尔值属性","children":[]},{"level":2,"title":"枚举属性","slug":"枚举属性","link":"#枚举属性","children":[]},{"level":2,"title":"全局属性","slug":"全局属性","link":"#全局属性","children":[{"level":3,"title":"id","slug":"id","link":"#id","children":[]},{"level":3,"title":"style","slug":"style","link":"#style","children":[]},{"level":3,"title":"tabindex","slug":"tabindex","link":"#tabindex","children":[]},{"level":3,"title":"role","slug":"role","link":"#role","children":[]},{"level":3,"title":"contenteditable","slug":"contenteditable","link":"#contenteditable","children":[]}]},{"level":2,"title":"自定义特性","slug":"自定义特性","link":"#自定义特性","children":[]}],"git":{"createdTime":1724483645000,"updatedTime":1724483645000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":1}]},"readingTime":{"minutes":18.98,"words":5694},"filePathRelative":"web/html/attributes.md","localizedDate":"2024年3月31日","excerpt":"\\n<p><a href=\\"/web/html/overview#attributes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">HTML 概述</a>中简要讨论了属性；现在，我们将进行深入探讨。</p>\\n<p>属性是让 HTML 如此强大的原因。属性是起始标记中显示的以空格分隔的名称和名称/值对，用于提供相应元素的相关信息和功能。</p>\\n<figure><figcaption>用 HTML 元素标记的起始标记、属性和结束标记。</figcaption></figure>\\n<p>属性定义了元素的行为、关联和功能。有些属性是全局属性，也就是说它们可以出现在任何元素的起始标记中。其他属性适用于多个元素（但并非全部），而其他属性则特定于元素，仅与单个元素相关。在 HTML 中，除布尔值之外的所有属性以及在某种程度上枚举属性都需要值。</p>","autoDesc":true}');export{o as comp,c as data};
