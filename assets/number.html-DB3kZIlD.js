import{_ as i,c as s,o as e,d as a}from"./app-BF8dx1V3.js";const t={},n=a(`<h1 id="numbers-表格" tabindex="-1"><a class="header-anchor" href="#numbers-表格"><span>Numbers 表格</span></a></h1><p>数值由任意系列的数字字符组成，例如：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>数字数据类型还包括几个表示数字概念的特殊全局属性，例如 <code>Infinity</code> 和 <code>NaN</code>。该值表示“非数字”，表示尝试对非数字值执行数学计算可能的结果。</p><h2 id="数字对象" tabindex="-1"><a class="header-anchor" href="#数字对象"><span>数字对象</span></a></h2><p>将值传递给 <code>Number()</code> 函数时，该值将转换为等值的数字。例如，数字字符串会生成等效数字基元：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;10&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>false</code> 或 <code>null</code> 值传递给 <code>Number()</code> 会返回 <code>0</code>，<code>true</code> 会返回 <code>1</code>。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果值无法转换（例如 <code>undefined</code> 或包含非数字字符的字符串），<code>Number</code> 函数会返回 <code>NaN</code>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">undefined</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NaN</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;The number 3.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NaN</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如<a href="/web/javascript/appendix#prototyal-inheritance" target="_blank" rel="noopener noreferrer">原型继承</a>中所述，您可能几乎没有理由将 <code>Number</code> 对象用作构造函数，因为它会创建 <code>Number</code> 对象，而不是数字字面量。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> numObject</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">numObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此对象会充当其在进行数学运算时分配的值，但由于数据类型不匹配，因此无法对数字字面量进行严格的等式比较，并且与字面量值相比，它无法提供任何实际优势。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> tenObject</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">tenObject</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">15</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">tenObject</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="浮点数和整数" tabindex="-1"><a class="header-anchor" href="#浮点数和整数"><span>浮点数和整数</span></a></h2><p>JavaScript 只有一种数字类型：介于 <code>-2^1024</code> 和 <code>2^1024</code> 之间的 64 位 <a href="https://en.wikipedia.org/wiki/IEEE_754-1985" target="_blank" rel="noopener noreferrer">IEEE 754-1985 双精度浮点数</a>。JavaScript 在将任何数字存储在内存中之前，会先将该数字转换为二进制浮点数（也称为“浮点数”）。<em>float</em></p><p>这种 64 位存储空间（一个正/负“符号”位，11 位用于指数，52 位用于小数）可能会导致出现任何不在允许范围内的位数的精度错误。此限制是 JavaScript 的数字数据类型所固有的。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.7</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.7999999999999999</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>数值可以改为存储为整数，即没有介于 <code>-(2^53 − 1)</code> 和 <code>2^53 − 1</code> 之间的小数的浮点数。由于浮点数和整数以相同的基本方式存储，因此这些数字的运算方式没有实际区别。不过，我们建议尽可能使用整数，以避免精度错误。</p><h2 id="数字运算符" tabindex="-1"><a class="header-anchor" href="#数字运算符"><span>数字运算符</span></a></h2><p>将标准数学运算符与数字基元结合使用时，应遵循数学<a href="https://en.wikipedia.org/wiki/Order_of_operations" target="_blank" rel="noopener noreferrer">运算顺序</a>：用括号括起来的任何表达式都会先求值，然后计算指数、乘法、除法、加法和减法。</p><table><thead><tr><th>运算符</th><th>名称</th><th>说明</th><th>用量</th><th>结果</th></tr></thead><tbody><tr><td><code>+</code></td><td>加法</td><td></td><td><code>2+2</code></td><td><code>4</code></td></tr><tr><td><code>-</code></td><td>减法</td><td></td><td><code>4-2</code></td><td><code>2</code></td></tr><tr><td><code>*</code></td><td>乘</td><td></td><td><code>2*5</code></td><td><code>10</code></td></tr><tr><td><code>/</code></td><td>部门</td><td></td><td><code>10/5</code></td><td><code>2</code></td></tr><tr><td><code>++</code></td><td>递增</td><td>对数字加上一</td><td><code>2++</code></td><td><code>3</code></td></tr><tr><td><code>--</code></td><td>减少</td><td>将数字减去 1</td><td><code>3--</code></td><td><code>2</code></td></tr><tr><td><code>**</code></td><td>指数</td><td>返回第一个</td><td></td><td></td></tr><tr><td>操作数的第二个操作数次幂的结果。</td><td><code>2**4</code></td><td><code>16</code></td><td></td><td></td></tr><tr><td><code>%</code></td><td>其余</td><td>返回</td><td></td><td></td></tr><tr><td>第一个操作数除以第二个操作数后所剩的余数。</td><td><code>12%5</code></td><td><code>2</code></td><td></td><td></td></tr></tbody></table><p>您还可以使用数学赋值运算符对变量的值执行数学运算，并立即将新计算的值赋给变量。</p><table><thead><tr><th>运算符</th><th>名称</th><th>用量</th></tr></thead><tbody><tr><td><code>+=</code></td><td>添加分配</td><td><code>myValue += 2</code></td></tr><tr><td><code>-=</code></td><td>减法分配</td><td><code>myValue -= 2</code></td></tr><tr><td><code>*=</code></td><td>乘法分配</td><td><code>myValue *= 2</code></td></tr><tr><td><code>/=</code></td><td>部门分配</td><td><code>myValue /= 2</code></td></tr><tr><td><code>**=</code></td><td>指数赋值</td><td><code>myValue **= 2</code></td></tr><tr><td><code>%=</code></td><td>剩余分配任务</td><td><code>myValue %= 2</code></td></tr></tbody></table><h2 id="符号值" tabindex="-1"><a class="header-anchor" href="#符号值"><span>符号值</span></a></h2><p>数字基元还适用于一些特殊情况：“非数字”值 (<code>NaN</code>) 和表示无穷大的值，可以是正数 (<code>Infinity</code>)，也可以是负数 (<code>-Infinity</code>)。</p><p>在除以 0 后，您可能很少会遇到 <code>Infinity</code>，在这种情况下，大多数编程语言都会抛出错误：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">Infinity</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，JavaScript 区分大小写。<code>Infinity</code> 是表示无穷大概念的数字数据类型，但 <code>infinity</code> 没有特殊含义：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">Infinity</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">Infinity</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">infinity</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">UncaughtReferenceError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">infinity</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> isnotdefined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当算术运算的结果无法表示为数字时，<code>NaN</code>（表示“不是数字”）会更频繁地显示。<a href="https://en.wikipedia.org/wiki/IEEE_754-1985#NaN" target="_blank" rel="noopener noreferrer"></a>例如，由于 JavaScript 会尝试根据值和上下文推断数据类型，因此仅包含数字的字符串字面量可以在数学运算中使用：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>但是，如果该字符串无法解析为数字值，则数学运算会返回非数字：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;two&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NaN</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在数学运算中将无效值表示为数字的任何情况下，都会返回 <code>NaN</code>。示例如下：</p><ul><li>失败的数字转化（例如 <code>parseInt( undefined )</code>）</li><li>结果不是实数的算术运算（例如 <code>0 / 0</code>、<code>Math.sqrt( -10 )</code>）</li><li>结果不确定的算术运算 (<code>0 * Infinity</code>)</li><li>包含显式 <code>NaN</code> (<code>NaN + 2</code>) 或 <code>NaN</code> 结果 (<code>2 * &quot;string&quot; / 2</code>) 的算术运算</li></ul>`,37),d=[n];function l(h,r){return e(),s("div",null,d)}const k=i(t,[["render",l],["__file","number.html.vue"]]),c=JSON.parse('{"path":"/web/javascript/data-types/number.html","title":"Numbers 表格","lang":"zh-CN","frontmatter":{"date":"2024-03-31T00:00:00.000Z","category":"javascript","tag":["number"],"description":"Numbers 表格 数值由任意系列的数字字符组成，例如： 数字数据类型还包括几个表示数字概念的特殊全局属性，例如 Infinity 和 NaN。该值表示“非数字”，表示尝试对非数字值执行数学计算可能的结果。 数字对象 将值传递给 Number() 函数时，该值将转换为等值的数字。例如，数字字符串会生成等效数字基元： 将 false 或 null 值传...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/javascript/data-types/number.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"Numbers 表格"}],["meta",{"property":"og:description","content":"Numbers 表格 数值由任意系列的数字字符组成，例如： 数字数据类型还包括几个表示数字概念的特殊全局属性，例如 Infinity 和 NaN。该值表示“非数字”，表示尝试对非数字值执行数学计算可能的结果。 数字对象 将值传递给 Number() 函数时，该值将转换为等值的数字。例如，数字字符串会生成等效数字基元： 将 false 或 null 值传..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T07:14:05.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:tag","content":"number"}],["meta",{"property":"article:published_time","content":"2024-03-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T07:14:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Numbers 表格\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T07:14:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"数字对象","slug":"数字对象","link":"#数字对象","children":[]},{"level":2,"title":"浮点数和整数","slug":"浮点数和整数","link":"#浮点数和整数","children":[]},{"level":2,"title":"数字运算符","slug":"数字运算符","link":"#数字运算符","children":[]},{"level":2,"title":"符号值","slug":"符号值","link":"#符号值","children":[]}],"git":{"createdTime":1724483645000,"updatedTime":1724483645000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":1}]},"readingTime":{"minutes":3.8,"words":1140},"filePathRelative":"web/javascript/data-types/number.md","localizedDate":"2024年3月31日","excerpt":"\\n<p>数值由任意系列的数字字符组成，例如：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"javascript\\" data-title=\\"javascript\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">5</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{k as comp,c as data};
