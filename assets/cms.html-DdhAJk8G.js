import{_ as s,c as i,o as a,b as e}from"./app-C58kMEDU.js";const t={},n=e(`<h1 id="网站生成器、框架和-cms" tabindex="-1"><a class="header-anchor" href="#网站生成器、框架和-cms"><span>网站生成器、框架和 CMS</span></a></h1><p>了解如何通过 CMS（例如 WordPress）和其他网站生成器更轻松地使用自适应图片。</p><p>虽然与手动保存每张图片的替代剪辑并通过 <a href="https://squoosh.app/" target="_blank" rel="noopener noreferrer">Squoosh.app</a> 等工具手动对其进行优化相比，这种方法确实有待改进，但在开发过程中，自动压缩图片存在一些限制。首先，您可能无法始终完全控制整个网站使用的图片 - 网络上大多数面向用户的图片更侧重于<em>内容</em>，而不是由用户或编辑者上传的开发问题，而不是与 JavaScript 和样式表等开发资源一起存储在代码库中。</p><p>这通常需要多个图片管理流程：一个是开发级任务，涉及构建和维护网站时使用的图片资源（背景、图标、徽标等），另一个涉及通过网站生成的图片资源，例如编辑团队在帖子中嵌入的照片或用户上传的头像。虽然上下文可能不同，但最终目标都是相同的：根据开发团队定义的设置自动编码和压缩。</p><p>幸运的是，您从本地开发工作流中了解的图片处理库可用于任意数量的上下文。虽然不可能没有放之四海而皆准的方法来处理自适应图片标记，但这些系统提供了合理的默认值、配置选项和 API 钩子来简化其实现。</p><h2 id="静态网站生成器" tabindex="-1"><a class="header-anchor" href="#静态网站生成器"><span>静态网站生成器</span></a></h2><p>与任务运行程序相比，静态网站生成器（例如 Jekyll 或 Eleventy 处理图片）在方式上有一些相似之处。要使用这些工具生成可供部署的网站，需要管理资源，包括 CSS 缩减、转译和捆绑 JavaScript。正如您所想，这意味着这些工具可让您使用已经了解的许多库，以相同的方式处理图片素材资源。</p><p>官方的 <a href="https://www.11ty.dev/docs/plugins/image/" target="_blank" rel="noopener noreferrer">Eleventy 图片插件</a>使用 <a href="https://www.npmjs.com/package/sharp" target="_blank" rel="noopener noreferrer">Sharp</a> 实现调整大小、生成多种来源大小、重新编码和压缩，就像您在这里学到的一些任务一样。</p><p>与任务运行程序不同，静态网站生成器可以直接深入了解这些库的配置和使用情况，以及为生产网站生成的标记，这意味着它可以更好地自动处理我们的自适应图片标记。例如，当<a href="https://www.aleksandrhovhannisyan.com/blog/eleventy-image-plugin/" target="_blank" rel="noopener noreferrer">作为用于显示图片的短代码的一部分被调用</a>时，此插件会根据传递给 Sharp 的配置选项输出 HTML。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> Image</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;@11ty/eleventy-img&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">eleventyConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> imageShortcode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">sizes</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100vw&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> metadata</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  formats</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;avif&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;webp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;jpeg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  widths</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  outputDir</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;_dist/img/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  filenameFormat</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> ext</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">extname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ),</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">        name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">basename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">ext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">-</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">width</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">format</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> imageAttributes</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  loading</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;lazy&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> Image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">generateHTML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">imageAttributes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">eleventyConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addAsyncShortcode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;respimg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">imageShortcode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，便可使用此短代码代替默认的图片语法：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{‌% respimg &quot;img/butterfly.jpg&quot;, &quot;Alt attribute.&quot;, &quot;(min-width: 30em) 800px, 80vw&quot; %}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果配置为输出多种编码，如上所述，生成的标记将是一个 <code>元素，其中包含相应的</code> 元素、<code>type</code> 属性和 <code>srcset</code> 属性（已完全填充了生成的候选尺寸列表）。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;image/avif&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> srcset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/img/butterfly-400.avif 400w, /img/butterfly-800.avif 800w, /img/butterfly-1000.avif 1000w&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;(min-width: 30em) 800px, 80vw&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;image/webp&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> srcset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/img/butterfly-400.webp 400w, /img/butterfly-800.webp 800w, /img/butterfly-1000.webp 1000w&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;(min-width: 30em) 800px, 80vw&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;image/jpeg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> srcset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/img/butterfly-400.jpeg 400w, /img/butterfly-800.jpeg 800w, /img/butterfly-1000.jpeg 1000w&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;(min-width: 30em) 800px, 80vw&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Alt attribute.&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> loading</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lazy&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/img/butterfly-400.jpeg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1000&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;846&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当然，该插件无法<em>generate</em>可行的 <code>sizes</code> 属性，因为它无法知道图片在渲染布局中的最终尺寸和位置，但它确实能在生成标记时接受其中一个属性作为输入，这是 RespImageLint 的另一项工作。</p><h2 id="框架" tabindex="-1"><a class="header-anchor" href="#框架"><span>框架</span></a></h2><p>客户端渲染框架需要像 Webpack 一样的任务运行程序或捆绑器来编辑、编码和压缩图像资源。例如，<a href="https://www.npmjs.com/package/responsive-loader" target="_blank" rel="noopener noreferrer">Adaptive-loader</a> 也会使用 Sharp 库重新保存图片素材资源。然后，您可以使用 <code>import</code> 将图片作为对象：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> imageAVIF</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;img/butterfly.jpg?sizes[]=400,sizes[]=800,sizes[]=1000&amp;format=avif&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> imageWebP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;img/butterfly.jpg?sizes[]=400,sizes[]=800,sizes[]=1000&amp;format=webp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> imageDefault</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;img/butterfly.jpg?sizes[]=400,sizes[]=800,sizes[]=1000&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，您可以通过 <a href="https://reactnative.dev/docs/image" target="_blank" rel="noopener noreferrer">React 的图片组件</a>等抽象概念使用这些导入的图片，或者直接填充自适应图片标记：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">picture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image/avif&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> srcSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{imageAVIF.srcSet}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;…&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image/webp&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> srcSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{imageWebp.srcSet}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;…&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{imageDefault.src}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    srcSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{imageDefault.srcSet}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{imageDefault.width}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{imageDefault.height}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    sizes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;…&#39;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    loading</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lazy&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行客户端渲染的框架非常适合 <a href="https://www.npmjs.com/package/lazysizes" target="_blank" rel="noopener noreferrer">Lazysizes</a> 和 <code>sizes=&quot;auto&quot;</code>，可为您提供几乎完全自动化的自适应图片。</p><h2 id="内容管理系统" tabindex="-1"><a class="header-anchor" href="#内容管理系统"><span>内容管理系统</span></a></h2><p>WordPress 是最早采用原生自适应图片标记的用户之一，自<a href="https://make.wordpress.org/core/2015/11/10/responsive-images-in-wordpress-4-4/" target="_blank" rel="noopener noreferrer">在 WordPress 4.4 中引入</a>此 API 以来，该 API 已得到逐步改进，支持 WebP 并支持输出 MIME 类型。WordPress 核心的设计宗旨是使用 <a href="https://www.php.net/manual/en/book.imagick.php" target="_blank" rel="noopener noreferrer">ImageMagick PHP 扩展程序</a>（或者若没有该扩展程序，则使用 <a href="https://www.php.net/manual/en/book.image.php" target="_blank" rel="noopener noreferrer">GD</a> 库）。</p><p>通过 WordPress 管理界面上传图片后，系统会使用该来源图片在服务器上生成面向用户的文件，操作方式与在本地计算机上大致相同。默认情况下，WordPress 输出的任何图片都会带有一个根据<a href="https://developer.wordpress.org/apis/responsive-images/" target="_blank" rel="noopener noreferrer">主题中配置的图片大小</a>生成的 <code>srcset</code> 属性。</p><p>可以为生成的图片配置的两个关键设置是<a href="https://developer.wordpress.org/reference/hooks/wp_editor_set_quality/" target="_blank" rel="noopener noreferrer">压缩质量</a>和<a href="https://developer.wordpress.org/reference/hooks/image_editor_output_format/" target="_blank" rel="noopener noreferrer">输出 MIME 类型</a>。</p><p>例如，如需将所有生成的图片的默认压缩质量设置为 <code>70</code>，请使用以下命令：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">add_filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;wp_editor_set_quality&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 70</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> );</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>为了更好地进行压缩，请使用以下代码将上传的 JPEG 图片的输出格式切换为 WebP：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">add_filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;image_editor_output_format&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $mappings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  $mappings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;image/jpeg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;image/webp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $mappings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> );</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>鉴于 WordPress 充分了解它基于上传的图片生成的所有<a href="https://developer.wordpress.org/reference/functions/add_image_size/" target="_blank" rel="noopener noreferrer">备用剪切</a>和编码，它可以提供 <a href="https://developer.wordpress.org/reference/functions/wp_get_attachment_image_srcset/" target="_blank" rel="noopener noreferrer"><code>wp_get_attachment_image_srcset()</code></a> 等辅助函数来检索图片附件的完整、生成 <code>srcset</code> 值。</p><p>您可能已经猜到，使用 <code>sizes</code> 属性有点麻烦。由于没有关于图片在布局中使用方式的任何信息，WordPress 目前默认使用 <code>sizes</code> 值，该值实际上是“此图片应占据可用视口的 100%，直至达到最大来源的固有尺寸”。这是一种可预测的默认指标，但并不适合任何实际应用。请务必使用 <a href="https://developer.wordpress.org/reference/hooks/wp_calculate_image_sizes/" target="_blank" rel="noopener noreferrer"><code>wp_calculate_image_sizes()</code></a> 在模板中设置适合上下文的 <code>sizes</code> 属性。</p><p>当然，有数不清的 WordPress 插件致力于为开发团队和用户提高现代映像工作流的速度。 也许最令人兴奋的是，像 <a href="https://jetpack.com/support/site-accelerator/" target="_blank" rel="noopener noreferrer">Jetpack 的 Site Accelerator</a>（以前称为“ Photon”）之类的插件可以提供服务器端的编码协商，从而确保用户收到浏览器能够支持的最小、最高效的编码，而无需使用 \`\` 和 <code>type</code> 标记模式。它使用图片内容分发网络实现这一点，图片内容分发网络是一种您可以独立于 CMS 的技术。</p><p>这同样适用于 Shopify 等托管 CMS 解决方案，但机制本身略有不同：用于<a href="https://performance.shopify.com/blogs/blog/responsive-images-on-shopify-with-liquid#provide-multiple-image-size-options-with-srcset" target="_blank" rel="noopener noreferrer">生成备用图片来源和相应的 <code>srcset</code> 属性</a>以及<a href="https://performance.shopify.com/blogs/blog/responsive-images-on-shopify-with-liquid#art-direction" target="_blank" rel="noopener noreferrer">通过 \`\` 元素提供艺术指导</a>的类似钩子。</p>`,33),h=[n];function l(k,p){return a(),i("div",null,h)}const d=s(t,[["render",l],["__file","cms.html.vue"]]),g=JSON.parse('{"path":"/web/images/cms.html","title":"网站生成器、框架和 CMS","lang":"zh-CN","frontmatter":{"date":"2023-02-01T00:00:00.000Z","category":"图片","description":"网站生成器、框架和 CMS 了解如何通过 CMS（例如 WordPress）和其他网站生成器更轻松地使用自适应图片。 虽然与手动保存每张图片的替代剪辑并通过 Squoosh.app 等工具手动对其进行优化相比，这种方法确实有待改进，但在开发过程中，自动压缩图片存在一些限制。首先，您可能无法始终完全控制整个网站使用的图片 - 网络上大多数面向用户的图片更...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/images/cms.html"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"网站生成器、框架和 CMS"}],["meta",{"property":"og:description","content":"网站生成器、框架和 CMS 了解如何通过 CMS（例如 WordPress）和其他网站生成器更轻松地使用自适应图片。 虽然与手动保存每张图片的替代剪辑并通过 Squoosh.app 等工具手动对其进行优化相比，这种方法确实有待改进，但在开发过程中，自动压缩图片存在一些限制。首先，您可能无法始终完全控制整个网站使用的图片 - 网络上大多数面向用户的图片更..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T07:14:05.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:published_time","content":"2023-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T07:14:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网站生成器、框架和 CMS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T07:14:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[{"level":2,"title":"静态网站生成器","slug":"静态网站生成器","link":"#静态网站生成器","children":[]},{"level":2,"title":"框架","slug":"框架","link":"#框架","children":[]},{"level":2,"title":"内容管理系统","slug":"内容管理系统","link":"#内容管理系统","children":[]}],"git":{"createdTime":1724483645000,"updatedTime":1724483645000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":1}]},"readingTime":{"minutes":6.34,"words":1901},"filePathRelative":"web/images/cms.md","localizedDate":"2023年2月1日","excerpt":"\\n<p>了解如何通过 CMS（例如 WordPress）和其他网站生成器更轻松地使用自适应图片。</p>\\n<p>虽然与手动保存每张图片的替代剪辑并通过 <a href=\\"https://squoosh.app/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Squoosh.app</a> 等工具手动对其进行优化相比，这种方法确实有待改进，但在开发过程中，自动压缩图片存在一些限制。首先，您可能无法始终完全控制整个网站使用的图片 - 网络上大多数面向用户的图片更侧重于<em>内容</em>，而不是由用户或编辑者上传的开发问题，而不是与 JavaScript 和样式表等开发资源一起存储在代码库中。</p>","autoDesc":true}');export{d as comp,g as data};
