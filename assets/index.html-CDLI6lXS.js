import{_ as e,c as t,o as a,d as r}from"./app-BF8dx1V3.js";const o={},n=r('<h1 id="数据类型和结构" tabindex="-1"><a class="header-anchor" href="#数据类型和结构"><span>数据类型和结构</span></a></h1><p>基元是 JavaScript 中最简单的数据类型。<em>基元字面量</em>是一个值，没有自己的封装容器或属性。基元字面量是<em>不可变</em>的，这意味着它们无法更改为表示其他值，具体方式与 JavaScript 更复杂的基于对象的数据结构相同。例如，虽然可以为名为 <code>theTruth</code> 的变量的值重新赋予 <code>false</code> 值，但布尔字面量 <code>true</code> 绝不能表示 <code>true</code> 以外的任何值，正如数字字面量 <code>5</code> 永远不能表示另一个数字的值一样。</p><p>原始数据类型有以下 7 种：</p><ul><li><a href="/web/javascript/data-types/number" target="_blank" rel="noopener noreferrer">数字</a></li><li><a href="/web/javascript/data-types/string" target="_blank" rel="noopener noreferrer">字符串</a></li><li><a href="/web/javascript/data-types/boolean" target="_blank" rel="noopener noreferrer">布尔值</a></li><li><a href="/web/javascript/data-types/null-undefined#null" target="_blank" rel="noopener noreferrer"><code>null</code></a></li><li><a href="/web/javascript/data-types/null-undefined#undefined" target="_blank" rel="noopener noreferrer"><code>undefined</code></a></li><li><a href="/web/javascript/data-types/bigint" target="_blank" rel="noopener noreferrer">BigInt</a></li><li><a href="/web/javascript/data-types/symbol" target="_blank" rel="noopener noreferrer">符号</a></li></ul><p>如需了解更复杂的数据类型，请参阅<a href="/web/javascript/data-types/variable" target="_blank" rel="noopener noreferrer">变量</a>。</p>',5),i=[n];function c(p,l){return a(),t("div",null,i)}const s=e(o,[["render",c],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/web/javascript/data-types/","title":"数据类型和结构","lang":"zh-CN","frontmatter":{"date":"2024-03-31T00:00:00.000Z","category":"javascript","tag":["数据类型"],"description":"数据类型和结构 基元是 JavaScript 中最简单的数据类型。基元字面量是一个值，没有自己的封装容器或属性。基元字面量是不可变的，这意味着它们无法更改为表示其他值，具体方式与 JavaScript 更复杂的基于对象的数据结构相同。例如，虽然可以为名为 theTruth 的变量的值重新赋予 false 值，但布尔字面量 true 绝不能表示 true...","head":[["meta",{"property":"og:url","content":"https://pigiysou147.github.io/blogs/web/javascript/data-types/"}],["meta",{"property":"og:site_name","content":"silly blogs"}],["meta",{"property":"og:title","content":"数据类型和结构"}],["meta",{"property":"og:description","content":"数据类型和结构 基元是 JavaScript 中最简单的数据类型。基元字面量是一个值，没有自己的封装容器或属性。基元字面量是不可变的，这意味着它们无法更改为表示其他值，具体方式与 JavaScript 更复杂的基于对象的数据结构相同。例如，虽然可以为名为 theTruth 的变量的值重新赋予 false 值，但布尔字面量 true 绝不能表示 true..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-24T07:14:05.000Z"}],["meta",{"property":"article:author","content":"Silly"}],["meta",{"property":"article:tag","content":"数据类型"}],["meta",{"property":"article:published_time","content":"2024-03-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T07:14:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据类型和结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T07:14:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Silly\\",\\"url\\":\\"https://pigiysou147.com\\"}]}"]]},"headers":[],"git":{"createdTime":1724483645000,"updatedTime":1724483645000,"contributors":[{"name":"方勇","email":"silly@digitalgd.com.cn","commits":1}]},"readingTime":{"minutes":0.74,"words":223},"filePathRelative":"web/javascript/data-types/README.md","localizedDate":"2024年3月31日","excerpt":"\\n<p>基元是 JavaScript 中最简单的数据类型。<em>基元字面量</em>是一个值，没有自己的封装容器或属性。基元字面量是<em>不可变</em>的，这意味着它们无法更改为表示其他值，具体方式与 JavaScript 更复杂的基于对象的数据结构相同。例如，虽然可以为名为 <code>theTruth</code> 的变量的值重新赋予 <code>false</code> 值，但布尔字面量 <code>true</code> 绝不能表示 <code>true</code> 以外的任何值，正如数字字面量 <code>5</code> 永远不能表示另一个数字的值一样。</p>\\n<p>原始数据类型有以下 7 种：</p>","autoDesc":true}');export{s as comp,m as data};
